<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfc2629xslt/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-nottingham-variant-00" category="std" updates="7234">

  <front>
    <title>HTTP Variants</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization>Fastly</organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2017"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification introduces the HTTP <spanx style="verb">Variants</spanx> response header field to communicate what representations are available for a given resource.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="emph">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/mnot/I-D/labels/variant">https://github.com/mnot/I-D/labels/variant</eref>.</t>

<t>The most recent (often, unpublished) draft is at <eref target="https://mnot.github.io/I-D/variant/">https://mnot.github.io/I-D/variant/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/mnot/I-D/commits/gh-pages/variant">https://github.com/mnot/I-D/commits/gh-pages/variant</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-nottingham-variant/">https://datatracker.ietf.org/doc/draft-nottingham-variant/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>HTTP proactive content negotiation (<xref target="RFC7231"/>, Section 3.4.1) is increasingly being used to determine not only a response’s content-coding, but also its language, as well as newer axes (for example, see <xref target="I-D.ietf-httpbis-client-hints"/>).</t>

<t>Successfully reusing negotiated responses that have been stored in a HTTP cache requires establishment of a secondary cache key (<xref target="RFC7234"/>, Section 4.1) using the Vary header (<xref target="RFC7231"/>, Section 7.1.4).</t>

<t>HTTP’s caching model allows a certain amount of latitude in normalising request header fields to match those stored in the cache, so as to increase the chances of a cache hit while still respecting the semantics of that header. However, this is often inadequate; even with understanding of the headers’ semantics to facilitate such normalisation, a cache does not know enough about the possible alternative representations available on the origin server to make an appropriate decision.</t>

<t>For example, if a cache has stored the following request/response pair:</t>

<figure><artwork><![CDATA[
GET /foo HTTP/1.1
Host: www.example.com
Accept-Language: en;q=1.0, fr;q=0.5

HTTP/1.1 200 OK
Content-Type: text/html
Content-Language: fr
Vary: Accept-Language

[French content]
]]></artwork></figure>

<t>a downstream (client or intermediary) cache that has full knowledge of the semantics of <spanx style="verb">Accept-Language</spanx> and <spanx style="verb">Content-Language</spanx> will know that a French representation is available, and might be able to infer that an English representation is not available, but it does not know, for example, whether a Japanese representation is available without making another request, thereby incurring possibly unnecessary latency.</t>

<t>This specification introduces the HTTP <spanx style="verb">Variants</spanx> response header field to address this shortcoming, by communicating what representations are available for a given resource.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"/>.</t>

<t>This specification uses the Augmented Backus-Naur Form (ABNF) notation of <xref target="RFC5234"/> with a list extension, defined in Section 7 of <xref target="RFC7230"/>, that allows for compact definition of comma-separated lists using a ‘#’ operator (similar to how the ‘*’ operator indicates repetition).</t>

<t>Additionally, it uses the “field-name”, “OWS” and “token” rules from <xref target="RFC7230"/>.</t>

</section>
</section>
<section anchor="the-variant-http-header-field" title="The “Variant” HTTP Header Field">

<t>The <spanx style="verb">Variant</spanx> HTTP response header field is used to indicate what other representations are available for a given resource at the time that the response is produced.</t>

<figure><artwork><![CDATA[
Variants = 1#( field-name *( OWS ";" OWS token ))
]]></artwork></figure>

<t>Each <spanx style="verb">field-name</spanx> in the list indicates a response header field that carries a value that clients might proactively negotiate for; each <spanx style="verb">token</spanx> parameter on the <spanx style="verb">field-name</spanx> is an available value.</t>

<t>So, given this example header field:</t>

<figure><artwork><![CDATA[
Variants: Content-Encoding;gzip
]]></artwork></figure>

<t>a recipient can infer that the only content-coding available for that resource is “gzip”.</t>

<t>Given:</t>

<figure><artwork><![CDATA[
Variants: content-encoding
]]></artwork></figure>

<t>a recipient can infer that no content-codings are supported. Note that as always with header field names, it is case-insensitive.</t>

<t>A more complex example:
~~~
Variants: DPR;1.0;2.0, Content-Language;en ;fr
~~~</t>

<t>Here, recipients can infer that two Device Pixel Ratios are available, as well as two content languages. Note that, as with all HTTP header fields that use the “#” list rule (see <xref target="RFC7230"/>, Section 7), they might occur in the same header field or separately.</t>

<t>Note that the ordering of values after the field-name is significant, as it might be used by the header’s algorithm for selecting a response.</t>

<t>Senders SHOULD consistently send <spanx style="verb">Variant</spanx> on all cacheable (as per <xref target="RFC7234"/>, Section 3) responses for a resource, since its absence will trigger caches to fall back to <spanx style="verb">Vary</spanx> processing.</t>

<section anchor="defining-content-negotiation-using-variants" title="Defining Content Negotiation Using Variants">

<t>To be usable with Variants, proactive content negotiation mechanisms need to be specified to take advantage of it. Specifically, they:</t>

<t><list style="symbols">
  <t>MUST define a request header field that advertises the clients preferences or capabilities, whose field-name SHOULD begin with “Accept-“</t>
  <t>MUST define a response header field that indicates the result of selection, whose field-name SHOULD begin with “Content-“ and whose field-value SHOULD be a token</t>
  <t>MUST define a way for selecting a result, given a request header field value.</t>
</list></t>

<t><xref target="backports"/> fulfils these requirements for some existing proactive content negotiation mechanisms in HTTP.</t>

</section>
<section anchor="cache-behaviour" title="Cache Behaviour">

<t>Caches that implement the <spanx style="verb">Variants</spanx> header field and the relevant semantics of the field-name it contains SHOULD use that knowledge to either select an appropriate stored representation, or forward the request if no appropriate representation is stored.</t>

<t>They do so by running the defined algorithm to normalise the relevant request header field to a value, which they can then either locate in their cache or fetch from the origin server.</t>

<t>The information in the <spanx style="verb">Variants</spanx> header field is usable so long as the response that conveyed it remains fresh (as per <xref target="RFC7234"/>, Section 4.2). Caches SHOULD use the most recent response’s <spanx style="verb">Variant</spanx> field-value(s), but MAY use older ones as long as they are still fresh.</t>

<section anchor="relationship-to-vary" title="Relationship to Vary">

<t>Caches that fully implement this specification MUST ignore request header-fields in the <spanx style="verb">Vary</spanx> header for the purposes of secondary cache key calculation (<xref target="RFC7234"/>, Section 4.1) when their semantics are understood, implemented as per this specification, and their corresponding response header field is listed in <spanx style="verb">Variants</spanx>.</t>

<t>Request header fields listed in <spanx style="verb">Vary</spanx> that are not implemented in terms of this specification or not present in the <spanx style="verb">Variants</spanx> field SHOULD still form part of the secondary cache key.</t>

</section>
</section>
<section anchor="examples" title="Examples">

<section anchor="single-variant" title="Single Variant">

<t>Given a request/response pair:</t>

<figure><artwork><![CDATA[
GET /foo HTTP/1.1
Host: www.example.com
Accept-Language: en;q=1.0, fr;q=0.5

HTTP/1.1 200 OK
Content-Type: image/gif
Content-Language: en
Cache-Control: max-age=3600
Variants: Content-Language;en;de
Vary: Accept-Language
]]></artwork></figure>

<t>Upon receipt of this response, the cache knows that two representations of this resource are available, one with a <spanx style="verb">Content-Language</spanx> of “en”, and another whose <spanx style="verb">Content-Language</spanx> is “de”.</t>

<t>Subsequent requests (while this response is fresh) will cause the cache to either reuse this response or forward the request, depending on what the selection algorithm <spanx style="verb">Accept-Language</spanx> and <spanx style="verb">Content-Language</spanx> determines.</t>

<t>So, a request with “en” in <spanx style="verb">Accept-Language</spanx> is received and its q-value indicates that it is acceptable, the stored response is used. A request that indicates that “de” is acceptable will be forwarded to the origin, thereby populating the cache. A cache receiving a request that indicates both languages are acceptable will use the q-value to make a determination of what response to return.</t>

<t>A cache receiving a request that does not list either language as acceptable (or does not contain an Accept-Language at all) will return the “en” representation (possibly fetching it from the origin), since it is listed first.</t>

<t>Note that <spanx style="verb">Accept-Language</spanx> is listed in Vary, to assure backwards-compatibility with caches that do not support <spanx style="verb">Variants</spanx>.</t>

<t>Also, note that response header is listed in <spanx style="verb">Variants</spanx>, not the request header (as is the case with <spanx style="verb">Vary</spanx>).</t>

</section>
<section anchor="multiple-variants" title="Multiple Variants">

<t>A more complicated request/response pair:</t>

<figure><artwork><![CDATA[
GET /bar HTTP/1.1
Host: www.example.net
Accept-Language: en;q=1.0, fr;q=0.5
Accept-Encoding: gzip, br

HTTP/1.1 200 OK
Content-Type: image/gif
Content-Language: en
Content-Encoding: br
Variants: Content-Language;en;jp;de
Variants: Content-Encoding;br;gzip
Vary: Accept-Language, Accept-Encoding
]]></artwork></figure>

<t>Here, the cache knows that there are two axes that the response varies upon; <spanx style="verb">Content-Language</spanx> and <spanx style="verb">Content-Encoding</spanx>. Thus, there are a total of six possible representations for the resource, and the cache needs to consider the selection algorithms for both axes.</t>

<t>Upon a subsequent request, if both selection algorithms return a stored representation, it can be served from cache; otherwise, the request will need to be forwarded to origin.</t>

</section>
<section anchor="partial-coverage" title="Partial Coverage">

<t>Now, consider the previous example, but where only one of the varied axes is listed in <spanx style="verb">Variants</spanx>:</t>

<figure><artwork><![CDATA[
GET /bar HTTP/1.1
Host: www.example.net
Accept-Language: en;q=1.0, fr;q=0.5
Accept-Encoding: gzip, br

HTTP/1.1 200 OK
Content-Type: image/gif
Content-Language: en
Content-Encoding: br
Variants: Content-Encoding;br;gzip
Vary: Accept-Language, Accept-Encoding
]]></artwork></figure>

<t>Here, the cache will need to calculate a secondary cache key as per <xref target="RFC7234"/>, Section 4.1 – but considering only <spanx style="verb">Accept-Language</spanx> to be in its field-value – and then continue processing <spanx style="verb">Variants</spanx> for the set of stored responses that the algorithm described there selects.</t>

</section>
</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This specification registers one value in the Permanent Message Header Field Names registry established by <xref target="RFC3864"/>:</t>

<t><list style="symbols">
  <t>Header field name: Variants</t>
  <t>Applicable protocol: http</t>
  <t>Status: standard</t>
  <t>Author/Change Controller: IETF</t>
  <t>Specification document(s): [this document]</t>
  <t>Related information:</t>
</list></t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If the number or advertised characteristics of the representations available for a resource are considered sensitive, the <spanx style="verb">Variants</spanx> header by its nature will leak them.</t>

<t>Note that the <spanx style="verb">Variants</spanx> header is not a commitment to make representations of a certain nature available; the runtime behaviour of the server always overrides hints like <spanx style="verb">Variants</spanx>.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>This protocol is conceptually similar to, but simpler than, Transparent Content Negotiation <xref target="RFC2295"/>. Thanks to its authors for their inspiration.</t>

<t>It is also a generalisation of a Fastly feature designed by Rogier ‘DocWilco’ Mulhuijzen.</t>

<t>Thanks to Hooman Beheshti for his review and input.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>



<reference  anchor="RFC5234" target='https://www.rfc-editor.org/info/rfc5234'>
<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author initials='D.' surname='Crocker' fullname='D. Crocker' role='editor'><organization /></author>
<author initials='P.' surname='Overell' fullname='P. Overell'><organization /></author>
<date year='2008' month='January' />
<abstract><t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='68'/>
<seriesInfo name='RFC' value='5234'/>
<seriesInfo name='DOI' value='10.17487/RFC5234'/>
</reference>



<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-httpbis-client-hints">
<front>
<title>HTTP Client Hints</title>

<author initials='I' surname='Grigorik' fullname='Ilya Grigorik'>
    <organization />
</author>

<date month='April' day='18' year='2017' />

<abstract><t>An increasing diversity of Web-connected devices and software capabilities has created a need to deliver optimized content for each device.  This specification defines a set of HTTP request header fields, colloquially known as Client Hints, to address this.  They are intended to be used as input to proactive content negotiation; just as the Accept header field allows user agents to indicate what formats they prefer, Client Hints allow user agents to indicate device and agent specific preferences.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-httpbis-client-hints-04' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-httpbis-client-hints-04.txt' />
</reference>



<reference  anchor="RFC3864" target='https://www.rfc-editor.org/info/rfc3864'>
<front>
<title>Registration Procedures for Message Header Fields</title>
<author initials='G.' surname='Klyne' fullname='G. Klyne'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='J.' surname='Mogul' fullname='J. Mogul'><organization /></author>
<date year='2004' month='September' />
<abstract><t>This specification defines registration procedures for the message header fields used by Internet mail, HTTP, Netnews and other applications.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='90'/>
<seriesInfo name='RFC' value='3864'/>
<seriesInfo name='DOI' value='10.17487/RFC3864'/>
</reference>



<reference  anchor="RFC2295" target='https://www.rfc-editor.org/info/rfc2295'>
<front>
<title>Transparent Content Negotiation in HTTP</title>
<author initials='K.' surname='Holtman' fullname='K. Holtman'><organization /></author>
<author initials='A.' surname='Mutz' fullname='A. Mutz'><organization /></author>
<date year='1998' month='March' />
<abstract><t>HTTP allows web site authors to put multiple versions of the same information under a single URL.  Transparent content negotiation is an extensible negotiation mechanism, layered on top of HTTP, for automatically selecting the best version when the URL is accessed.  This enables the smooth deployment of new web data formats and markup tags. This memo defines an Experimental Protocol for the Internet community. It does not specify an Internet standard of any kind.  Discussion and suggestions for improvement are requested.</t></abstract>
</front>
<seriesInfo name='RFC' value='2295'/>
<seriesInfo name='DOI' value='10.17487/RFC2295'/>
</reference>




    </references>


<section anchor="backports" title="Variants and Defined Content Negotiation Mechanisms">

<t>This appendix defines the required information to use existing proactive content negotiation mechanisms (as defined in <xref target="RFC7231"/>, Section 5.3) with the <spanx style="verb">Variants</spanx> header field.</t>

<section anchor="content-encoding" title="Content-Encoding">

<t>When negotiating for the <spanx style="verb">Content-Encoding</spanx> response header field’s value, the applicable request header field is <spanx style="verb">Accept-Encoding</spanx>, as per <xref target="RFC7231"/> Section 5.3.4.</t>

<t>Caches SHOULD use Quality Values (<xref target="RFC7231"/>, Section 5.3.1) to determine whether there is an acceptable stored response, in conjunction with the information carried in the Variants response header field.</t>

<t>If no acceptable representation can be found using quality values, the first value listed in the relevant <spanx style="verb">Variant</spanx> field-value SHOULD be selected.</t>

<t>The “identity” encoding (which as per {{!RFC7231 Section 5.3.4 represents “no encoding”) is always implicitly available at the lowest priority; if the server wishes to change its priority, it can be explicitly listed. Responses are not required to carry “identity” in the <spanx style="verb">Content-Encoding</spanx> response header field by this specification.</t>

<t>Caches MAY assign a minimum quality value to trigger a request to origin. For example, a cache might decide to send a request to origin if there is not a stored response to which the client has assigned a quality value above 0.2.</t>

</section>
<section anchor="content-language" title="Content-Language">

<t>When negotiating for the <spanx style="verb">Content-Language</spanx> response header field’s value, the applicable request header field is <spanx style="verb">Accept-Language</spanx>, as per <xref target="RFC7231"/> Section 5.3.5.</t>

<t>Caches SHOULD use Quality Values (<xref target="RFC7231"/>, Section 5.3.1) to determine whether there is an acceptable stored response, in conjunction with the information carried in the Variants response header field.</t>

<t>If no acceptable representation can be found using quality values, the first value listed in the relevant <spanx style="verb">Variant</spanx> field-value SHOULD be selected.</t>

<t>Caches MAY assign a minimum quality value to trigger a request to origin. For example, a cache might decide to send a request to origin if there is not a stored response to which the client has assigned a quality value above 0.2.</t>

</section>
</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

