<?xml version="1.0" encoding="UTF-8"?>

<!-- Use local references that are modified to work with Saxon for XSLT generation. Urgh. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY rfc2045 SYSTEM 'bibxml/reference.RFC.2045.xml'>
    <!ENTITY rfc2119 SYSTEM 'bibxml/reference.RFC.2119.xml'>
    <!ENTITY rfc2396 SYSTEM 'bibxml/reference.RFC.2396.xml'>
    <!ENTITY rfc2822 SYSTEM 'bibxml/reference.RFC.2822.xml'>
    <!ENTITY rfc3023 SYSTEM 'bibxml/reference.RFC.3023.xml'>
    <!ENTITY rfc3066 SYSTEM 'bibxml/reference.RFC.3066.xml'>
    <!ENTITY rfc3339 SYSTEM 'bibxml/reference.RFC.3339.xml'>
    <!ENTITY dateTime SYSTEM 'bibxml/reference.W3C.NOTE-datetime-19980827.xml'>
    <!ENTITY infoset SYSTEM 'bibxml/reference.W3C.REC-xml-infoset-20011024.xml'>
    <!ENTITY xmlbase SYSTEM 'bibxml/reference.W3C.REC-xmlbase-20010627.xml'>
    <!ENTITY xmlns SYSTEM 'bibxml/reference.W3C.REC-xml-names-19990114.xml'>
    <!ENTITY xml SYSTEM 'bibxml/reference.W3C.REC-xml-20040204.xml'>
    <!ENTITY xmlsig SYSTEM 'bibxml/reference.W3C.REC-xmldsig-core-20020212.xml'>
    <!ENTITY xmlenc SYSTEM 'bibxml/reference.W3C.REC-xmlenc-core-20021210.xml'>    
    <!ENTITY docrev SYSTEM 'draft-ietf-atompub-format-version.xml'>  <!-- DON'T FORGET ME! (1 of 3)-->
]>

<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc toc="yes" ?>
<?rfc tocdepth="3" ?>
<?rfc tocindent="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc iprnotified="no" ?>
<?rfc strict="yes" ?>
<?rfc compact="no" ?>

<rfc ipr="full3667" docName="draft-ietf-atompub-format-02">   <!-- DON'T FORGET ME! (2 of 3) -->
    <front>
        <title abbrev="Atom Format">The Atom Syndication Format</title>
		<author initials="M" surname="Nottingham" fullname="Mark Nottingham" 
		role="editor">
			<organization></organization>
			<address>
				<email>mnot@pobox.com</email>
				<uri>http://www.mnot.net/</uri>
			</address>
		</author>
        <date month="September" year="2004"/>  <!-- DON'T FORGET ME! (3 of 3) -->
        <abstract>
			<t>This document specifies Atom, an XML-based Web content and
			metadata syndication format.</t>
         </abstract>
    </front>

    <middle>
        <section title="Introduction">
            <t>Atom is an XML-based document format intended to allow lists of
            related information, known as "feeds", to be synchronised between
            publishers and consumers. Feeds are composed of a number of items,
            known as "entries", each with an extensible set of attached
            metadata. For example, each entry has a title.</t>
            
            <t>The primary use case that Atom addresses is the syndication of
            Web content such as Weblogs and news headlines to Web sites as
            well as directly to user agents. However, nothing precludes
            it from being used for other purposes and kinds of content.</t>
            
            <t>Details of comunication protocols between software agents using
            Atom can be found in the Atom Protocol specification <xref
            target="Atom-protocol"/>.
            </t>
            
            <t>[[ more motivation / design principles ]]</t>

            <section title="Editorial Notes">
                
                <t>The Atom format is a work-in-progress, and this draft is both 
                incomplete and likely to change rapidly. As a result, THE FORMAT
                DESCRIBED BY THIS DRAFT SHOULD NOT BE DEPLOYED, either in production
                systems or in any non-experimental fashion on the Internet.</t>
                
                <t>Discussion of this draft happens in two fora;</t>
                
                <t><list> 
                <t>The mailing list <eref
                target="http://www.imc.org/atom-syntax/index.html"/></t>
                
                <t>The Atom Wiki Web site <eref
                target="http://www.intertwingly.net/wiki/pie/FrontPage"/></t> 
                </list></t>
                
                <t>Active development takes place on the mailing list, while the Wiki
                is used for issue tracking and new proposals. </t>
                
                <t>This document is an early draft and known to be incomplete.
                Topics marked [[like this]] indicate where additional text is
                likely to be added.</t>
            </section>
            
            <section title="Example">
                <figure>
				<preamble>A minimal, single-entry Atom Feed Document:</preamble>
				<artwork><![CDATA[
<?xml version="1.0" encoding="utf-8"?>
<feed ]]>version="draft-ietf-atompub-format-&docrev;: do not deploy" 
 xmlns="http://purl.org/atom/ns#draft-ietf-atompub-format-&docrev;"<![CDATA[>
  <head>
    <title>Example Feed</title>
    <link rel="alternate" type="text/html" 
     href="http://example.org/"/>
    <modified>2003-12-13T18:30:02Z</modified>
    <author>
      <name>John Doe</name>
    </author>
    </head>
  <entry>
    <title>Atom-Powered Robots Run Amok</title>
    <link rel="alternate" type="text/html" 
     href="http://example.org/2003/12/13/atom03"/>
    <id>tag:example.org,2003:3.2397</id>
    <issued>2003-12-13T08:29:29-04:00</issued>
    <modified>2003-12-13T18:30:02Z</modified>
  </entry>
</feed>
]]></artwork></figure>
            </section>
                        
            <section title="Conformance">
                <t>[[ talk about atom documents and atom consumers, and how 
                requirements are placed on them ]]</t>
            </section>

            <section title="Notational Conventions">
                <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
                "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY",
                and "OPTIONAL" in this document are to be interpreted as
                described in BCP 14, <xref target="RFC2119"/>.</t>			
            
                <t>This specification uses XML Namespaces <xref
                target="W3C.REC-xml-names-19990114"/> to uniquely identify XML
                elements and attribute names. It uses the following namespace
                prefixes for the indicated namespace URIs;</t>
                
                <t><list style="hanging">
                  <t hangText='"atom": '>http://purl.org/atom/ns#draft-ietf-atompub-format-&docrev;</t>
                </list></t>
                
                <t>Note that the choice of any namespace prefix is arbitrary
                and not semantically significant.</t>
                
                <t>Atom is specified using terms from the XML Infoset <xref
                target="W3C.REC-xml-infoset-20011024"/>. However, this
                specification uses a shorthand for two common terms; the phrase
                "Information Item" is omitted when naming Element Information Items
                and Attribute Information Items.</t>
                
                <t>Therefore, when this specification uses the term
                "element," it is refering to an Element Information Item in
                Infoset terms. Likewise, when it uses the term "attribute," it
                is refering to an Attribute Information Item.</t>
            </section>
        </section>
            
        <section title="Atom Documents">
            
            <t>This specification describes two kinds of Atom Documents; Atom
            Feed Documents and Atom Entry Documents.</t>
            
            <t>An Atom Feed Document is a representation of an
            Atom feed, including metadata about the feed, and some or all of the
            entries associated with it. Its document element is atom:feed.</t>
            
            <t>An Atom Entry Document represents exactly one Atom Entry, outside
            of the context of an Atom Feed. Its document element is atom:entry.</t>
                        
            <t>Both kinds of Atom documents are specified in terms of the XML
            Information Set, serialised as XML 1.0 <xref
            target="W3C.REC-xml-20040204"/> and identified with the
            "application/atom+xml" media type. Atom Documents MUST
            be well-formed XML.</t>
            
            <t>[[ Validity? ]]</t>
            
            <t>Atom constrains the appearance and content of elements and
            attributes; unless otherwise stated, Atom Documents MAY contain
            other Information Items as appropriate. In particular, Comment
            Information Items and Processing Instruction Information Items
            SHOULD be ignored in the normal processing of an Atom
            Document.</t>
                                                
            <t>Any element in an Atom Document MAY have an xml:base attribute.
            XML Base <xref target="W3C.REC-xmlbase-20010627"/> processing MUST
            be applied to any relative URI reference present in an Atom
            document. This includes such elements and attributes as specified
            by Atom itself, as well as those specified by extensions to
            Atom.</t>
 
            <t>Any element in an Atom Document MAY have an xml:lang attribute,
            whose content indicates the default natural language of the
            element's content. Requirements regarding the content and
            interpretation of xml:lang are specified in <xref
            target="W3C.REC-xml-20040204">XML 1.0</xref> Section 2.12. For
            convenience, the most important are summarised here:</t>
                        
            <t><list style="symbols">
            <t>The content of this attribute must be a
            language tag <xref target="RFC3066"/> or an empty string (e.g.,
            xml:lang=""), which indicates that there is no language
            information available.</t>
            
            <t>If an element does not have an xml:lang element, the first
            xml:lang attribute in its ancestors indicates the natural language
            of its content.</t>
            </list></t>

            <t>[[ feedback as to whether this listing is helpful or not would
            be appreciated; re-stating the requirements of other
            specifications is tricky. ]]</t>
                 
            <t>[[ discussion of URI escaping and i18n ]]</t>
            
            <t>[[ discussion of white space ]]</t>
                 
            <t>Atom is extensible. See the section titled 'Extending Atom'
            later in this document for a full description of how Atom Documents
            can be extended.</t>
            
        </section>
            
        <section title="Common Atom Constructs">
            <t>Many of Atom's elements share a few common structures. This
            section defines a few such structures and their requirements, for
            convenient reference by the appropriate element definitions.</t>
            
            <t>When an element is identified as being a particular kind of
            construct, it inherits the corresponding requirements from that
            construct's definition in this section.</t>
            
            <section title="Content Constructs">
                <t>A Content construct is an element with arbitrary child 
                content, whose properties are described by the following
                attributes:</t>
            
                <section title='"type" Attribute'>
                    <t>Content constructs MAY have a "type" attribute, whose
                    value indicates the media type of the content. When
                    present, this attribute's value MUST be a media type <xref
                    target="RFC2045"/>. If this attribute is not present,
                    processors MUST behave as if it were present with a value
                    of "text/plain".</t>
                </section>
                
                <section title='"mode" Attribute'>
                    <t>Content constructs MAY have a "mode" attribute, whose 
                    value indicates the method used to encode the content.
                    When present, this attribute's value MUST be listed below.
                    If not present, processors MUST behave as if its value
                    were "xml".</t>
                    <t><list style="hanging">
                        <t hangText='"xml": '>A mode attribute with the value
                        "xml" indicates that the element's content is inline
                        xml (for example, namespace-qualified XHTML).</t>
            
                        <t hangText='"escaped": '>A mode attribute with the
                        value "escaped" indicates that the element's content
                        is escaped, as defined in <xref
                        target="W3C.REC-xml-20040204"/> (section 4.6).
                        Processors MUST unescape the element's content before
                        considering it as content of the indicated media
                        type.</t>
            
                        <t hangText='"base64": '>A mode attribute with the
                        value "base64" indicates that the element's content is
                        base64-encoded <xref target="RFC2045"/>. Processors
                        MUST decode the element's content before considering
                        it as content of the the indicated media type.</t>
                    </list></t>
                </section>
            </section>
            
            <section title="Person Constructs">
                <t>A Person construct is an element that describes a person, corporation, 
                or similar entity.</t>

                <t>Person constructs MAY be extended by namespace-qualified
                element children.</t>
                
                <t>Ordering of the element children of Person constructs MUST
                NOT be considered significant.</t>
                
                <section title='"atom:name" Element'>
                    <t>The "atom:name" element's content conveys a
                    human-readable name for the person. Person constructs MUST
                    contain exactly one "atom:name" element.</t>
                </section>
                
                <section title='"atom:uri" Element'> 
                    <t>The "atom:uri" element's content conveys a URI
                    associated with the person. Person constructs MAY contain
                    an atom:uri element, but MUST NOT contain more than one.
                    The content of atom:uri in a Person construct MUST be a
                    URI <xref target="RFC2396"/>.</t>
                    
                    <t>xml:base <xref target="W3C.REC-xmlbase-20010627"/>
                    processing MUST be applied to the atom:uri element's content.</t>
                </section>
            
                <section title='"atom:email" Element'> 
                    <t>The "atom:email" element's content conveys an e-mail
                    address associated with the persons. Person
                    constructs MAY contain an atom:email element, but MUST NOT
                    contain more than one. Its content MUST be an e-mail
                    address <xref target="RFC2822"/>.</t>
                </section>
            </section>
            
            <section title="Date Constructs"> 
                <t>A Date construct is an element whose content MUST conform to the
                date-time BNF rule in <xref target="RFC3339"/>.
                </t>
            </section>
            
            <section title="Link Constructs">
                <t>A Link construct is an element that MUST NOT have any child
                content, and has the following attributes:</t>
                
                <section title='"rel" Attribute'>
                    <t>The "rel" attribute indicates the type of relationship
                    that the link represents. Link constructs MUST have a rel
                    attribute, whose value MUST be one of the values
                    enumerated in the Atom Protocol specification <xref
                    target="Atom-protocol"/>.</t>
                </section>
            
                <section title='"type" Attribute'>
                    <t>The "type" attribute indicates an advisory media type; it
                    MAY be used as a hint to determine the type of the representation
                    which should be returned when the URI in the href attribute is 
                    dereferenced. Note that the type attribute does not override the
                    actual media type returned with the representation.</t>
                    
                    <t>Link constructs MUST have a type attribute, whose value
                    MUST be a media type <xref target="RFC2045"/>.</t>
                </section>
            
                <section title='"href" Attribute'>
                    <t>The "href" attribute contains the link's URI. Link
                    constructs MUST have a href attribute, whose value MUST be
                    a URI <xref target="RFC2396"/>.</t>
                    
                    <t>xml:base <xref target="W3C.REC-xmlbase-20010627"/>
                    processing MUST be applied to the href attribute's content.</t>
                </section>
            
                <section title='"hreflang" Attribute'>
                    <t>The "hreflang" attribute's content describes the
                    language of the resource pointed to by the href
                    attribute. When used together with the
                    rel="alternate", it implies a translated version of
                    the entry. Link constructs MAY have an hreflang
                    attribute, whose value MUST be a language
                    tag <xref target="RFC3066"/>.</t>
                </section>
            
                <section title='"title" Attribute'>
                    <t>The "title" attribute conveys human-readable
                    information about the link. Link constructs MAY have a title
                    attribute.</t>
                </section>
            </section>
            
            <section title="Identity Constructs">
                <t>An Identity construct is an element whose content conveys a
                permanent, universally unique identifier for the construct's
                parent.</t>

                <t>Its content MUST be an absolute URI <xref
                target="RFC2396"/> that is universally unique; i.e., it MUST
                NOT change over time, even if the parent feed or entry element
                is relocated, migrated, syndicated, republished, exported or
                imported.</t>

                <section title="Dereferencing Identity Constructs">
                    <t>The content of an Identity construct MAY be dereferencable
                    (e.g. a HTTP URI). However, processors MUST NOT assume it to
                    be dereferencable.</t>
    
                    <t>If the identified resource is served dynamically, the content
                    of an Identity construct MUST be created only once and
                    then stored along with the resource. The content of an
                    Identity construct MUST NOT be created dynamically.</t>
                    
                    <t>Because of the risk of confusion between URIs that would
                    be equivalent if dereferenced, the following normalization
                    strategy is strongly encouraged when generating Identity
                    constructs:</t>

                    <t><list style="symbols">
                        <t>Provide the scheme in lowercase characters.</t>
                        <t>Provide the host, if any, in lowercase characters.</t>
                        <t>Only perform percent-encoding where it is essential.</t>
                        <t>Use uppercase A-through-F characters when percent-encoding.</t>
                        <t>Prevent dot-segments appearing in paths.</t>
                        <t>For schemes that define a default authority, use an empty authority if the default is desired.</t>
                        <t>For schemes that define an empty path to be equivalent to a path of "/", use "/".</t>
                        <t>For schemes that define a port, use an empty port if the default is desired.</t>
                        <t>Preserve empty fragment identifiers and queries.</t>
                        <t>Ensure that all portions of the URI are utf-8 encoded NFC form Unicode strings.</t>
                    </list></t>
                </section>

                <section title="Comparing Identity Constructs">
                    <t>Instances of Identity constructs can be compared to
                    determine whether a entry or feed is the same as one seen
                    before. Processors MUST compare Identity constructs on a
                    character-by-character basis in a case-sensitive fashion.</t>

                    <t>As a result, two URIs that resolve to the same resource
                    but are not character-for-character identical will be
                    considered different for the purposes of Identifier
                    comparison.</t>

                    <t>For example, "http://www.example.org/thing",
                    "http://www.example.org/Thing",
                    "http://www.EXAMPLE.org/thing" and
                    "HTTP://www.example.org/thing" will all be considered
                    different identifiers, despite their differences in case.</t>

                    <t>Likewise, "http://www.example.com/~bob",
                    "http://www.example.com/%7ebob" and
                    "http://www.example.com/%7Ebob" will all be considered
                    different identifiers, because URI %-escaping is
                    significant for the purposes of comparison.</t>

                    <t>XML character and entity references MUST be converted into characters
                    before comparison.</t>
                </section>

            </section>
            
        </section>
		
        <section title='The "atom:feed" Element'>
			
            <t>The "atom:feed" element is the document (i.e., top-level)
            element of an Atom Feed Document, acting as a container for
            metadata and data associated with the feed. Its first element
            child MUST be atom:head, which MAY be followed zero or more
            atom:entry child elements.</t>

            <section title='"version" Attribute'> 
                <t>atom:feed elements MUST have a "version" attribute whose
                content indicates the version of the Atom specification that
                the feed conforms to. The content of this attribute is 
                unstructured text.</t>
            
                <t>The version identifier for this specification is 
                "draft-ietf-atompub-format-&docrev;: do not deploy".</t>
            </section>

            <section title='The "atom:head" Element'>

                <t>The atom:head element acts as a container for metadata about the
                feed itself.</t>

                <t>The atom:head element MAY contain any namespace-qualified <xref
                target="W3C.REC-xml-names-19990114"/> elements as children.
                Ordering of the element children of atom:head element MUST NOT be
                considered significant.</t>
                
                <t>The following child elements are defined by this
                specification (note that the presence of some of these
                elements is required):</t>
                                    
                <section title='"atom:title" Element'> 
                    <t>The "atom:title" element is a Content construct that
                    conveys a human-readable title for the feed. atom:head
                    elements MUST contain exactly one atom:title element.</t>
                </section>
                    
                <section title='"atom:link" Element'> 
                    <t>The "atom:link" element is a Link construct that conveys a
                    URI associated with the feed. The nature of the relationship
                    is determined by the construct's rel attribute.</t>
                    
                    <t>atom:head elements MUST contain at least one atom:link
                    element with a rel attribute value of "alternate".</t>
                    
                    <t>atom:head elements MUST NOT contain more than one atom:link
                    element with a rel attribute value of "alternate" that has
                    the same type attribute value.</t>
                    
                    <t>If a feed's atom:link element with type="alternate"
                    resolves to an HTML document, then that document SHOULD
                    have a <xref target="Atom-autodiscovery">autodiscovery link
                    element</xref> that reflects back to the feed.</t>
                
                    <t>atom:head elements MAY contain additional atom:link
                    elements beyond those described above.</t>                
                </section>
                
                <section title='"atom:author" Element'> 
                    <t>The "atom:author" element is a Person construct that
                    indicates the default author of the feed. atom:head elements
                    MUST contain exactly one atom:author element, UNLESS all of
                    the atom:feed element's child atom:entry elements contain an
                    atom:author element. atom:head elements MUST NOT contain more
                    than one atom:author element.</t>
                
                    <t>[[explain inheritence]]</t> 
                </section>
                
                <section title='"atom:contributor" Element'> 
                    <t>The "atom:contributor" element is a Person construct that
                    indicates a person or other entity who contributes to the
                    feed. atom:head elements MAY contain one or more
                    atom:contributor elements.</t>
                </section>
                
                <section title='"atom:tagline" Element'> 
                    <t>The "atom:tagline" element is a Content construct that
                    conveys a human-readable description or tagline for the feed.
                    atom:head elements MAY contain an atom:tagline element, but
                    MUST NOT contain more than one.</t>
                </section>
                
                <section title='"atom:id" Element'> 
                    <t>The "atom:id" element is an Identity construct
                    that conveys a permanent, universally unique identifier
                    for a feed. atom:head elements MAY contain an atom:id
                    element, but MUST NOT contain more than one.</t>
                </section>
                
                <section title='"atom:generator" Element'> 
                    <t>The "atom:generator" element's content indentifies the
                    software agent used to generate the feed, for debugging and
                    other purposes. atom:head elements MAY contain an
                    atom:generator element, but MUST NOT contain more than one.</t>
                    
                    <t>The content of this element, when present, MUST be a 
                    string that is a human-readable name for the generating 
                    agent.</t>
                    
                    <t>The atom:generator element MAY have a "uri"
                    attribute whose value MUST be a URI. When dereferenced, that
                    URI SHOULD produce a representation that is relevant to that
                    agent.</t>
                    
                    <t>The atom:generator element MAY have a "version" attribute
                    that indicates the version of the generating agent. When
                    present, its value is unstructured text.</t>
                </section>
                
                
                <section title='"atom:copyright" Element'> 
                    <t>The "atom:copyright" element is Content construct that
                    conveys a human-readable copyright statement for the feed.
                    atom:head elements MAY contain an atom:copyright element, but
                    MUST NOT contain more than one.</t>
                    
                    <t>The atom:copyright element SHOULD NOT be used to convey
                    machine-readable licensing information.</t>
                    
                    <t>The atom:copyright element may be assumed to apply to
                    all entries contained by the feed except those entries
                    which contain atom:copyright elements. The atom:copyright
                    element MUST, if present, be considered to apply to the
                    feed as a collection of entries.</t>
                </section>
                
                <section title='"atom:info" Element'>
                    <t>The "atom:info" element is a Content construct that conveys
                    a human-readable explanation of the feed format itself.
                    atom:head elements MAY contain an atom:info element, but MUST
                    NOT contain more than one.</t>
                    
                    <t>The atom:info element SHOULD NOT considered meaningful by
                    processors; it is a convenience to publishers in certain 
                    situations.</t>
                </section>
                    
                <section title='"atom:modified" Element'> 
                    <t>The "atom:modified" element is a Date construct that
                    indicates the time when the state of the feed was last
                    modified, including any changes to entries therein. atom:head
                    elements MUST contain exactly one atom:modified element.</t>
                    
                    <t>The content of an atom:modified element SHOULD have a time
                    zone whose value MUST be "UTC".</t>
                </section>
            </section>
        </section>
                        
        <section title='The "atom:entry" Element'> 
        
            <t>The "atom:entry" element represents an individual entry. This element
            can appear as a child of the atom:feed element, or it can
            appear as the document (i.e., top-level) element of a
            standalone Atom Entry Document.
            </t>
                                
            <t>When appearing in an Atom Entry Document, atom:entry
            elements MUST have a "version" attribute whose content
            indicates the version of the Atom specification that the
            entry conforms to.</t>

            <t>The version identifier for this specification is 
            "draft-ietf-atompub-format-&docrev;: do not deploy".</t>
                
            <t>The atom:entry element MAY contain any namespace-qualified
            <xref target="W3C.REC-xml-names-19990114"/> elements as children.
            Ordering of the element children of atom:entry element MUST NOT be
            considered significant.</t>
            
            <t>The following child elements are defined by this
            specification (note that it requires the presence of some of
            these elements):</t>
        
            <section title='"atom:title" Element'>
                <t>The "atom:title" element is a Content construct that
                conveys a human-readable title for the entry. atom:entry
                elements MUST have exactly one "atom:title" element.</t>
            </section>
                    
            <section title='"atom:link" Element'> 
                <t>The "atom:link" element is a Link construct that
                conveys a URI associated with the entry. The nature of the
                relationship as well as the link itself is determined by
                the element's content.</t>
        
                <t>atom:entry elements MUST contain at least one atom:link
                element with a rel attribute value of "alternate".</t>
        
                <t>atom:entry elements MUST NOT contain more than one
                atom:link element with a rel attribute value of
                "alternate" that has the same type attribute value.</t>
        
                <t>atom:entry elements MAY contain additional atom:link
                elements beyond those described above.</t>
            </section>
                    
            <section title='"atom:author" Element'>
                <t>The "atom:author" element is a Person construct that
                indicates the default author of the entry. atom:entry elements
                MUST contain exactly one atom:author element, unless, in an
                Atom Feed Document, the atom:head element contains an
                atom:author element itself. atom:entry elements MUST NOT
                contain more than one atom:author element.</t>
            </section>
                                
            <section title='"atom:contributor" Element'>
                <t>The "atom:contributor" element is a Person construct that
                indicates a person or other entity who contributes
                to the entry. atom:entry elements MAY contain one or more
                atom:contributor elements.</t>
            </section>
        
            <section title='"atom:id" Element'> 
                <t>The "atom:id" element is an Identity construct that
                conveys a permanent, universally unique identifier for an
                entry. atom:entry elements MUST contain exactly one atom:id
                element.</t>
            </section>

            <section title='"atom:updated" Element'>            
                <t>The "atom:updated" element is a Date construct indicating
                the most recent instant in time when a change to the entry was
                made that the publisher wishes to bring to the attention of
                subscribers. For example, such changes might not include minor
                adjustments like spelling and grammatical corrections.</t>

                <t>atom:entry elements MUST contain exactly one atom:updated
                element.</t>

                <t>Publishers MAY change the value of this element over time.
                Processors MAY present entries sorted using this value.
                Processors MAY choose not to present entries until the instant
                in time specified in the atom:updated element has passed.</t>
            </section>
        
            <section title='"atom:summary" Element'>
                <t>The "atom:summary" element is a Content construct that
                conveys a short summary, abstract or excerpt of the
                entry. atom:entry elements MAY contain an atom:summary
                element, but MUST NOT contain more than one.</t>
            </section>
            
            <section title='"atom:content" Element'>
                <t>The "atom:content" element is a Content construct that
                conveys the content of the entry. atom:entry elements MAY
                contain one or more atom:content elements.</t>
        
                <t>If @type="multipart/alternative", @mode MUST NOT
                be specified, and content element MUST contain 1 or
                more content elements.  These content elements MUST
                NOT specify @type="multipart/alternative" (i.e. only
                one level of nesting is allowed).  Consumers SHOULD
                look at all alternative content elements and
                determine which one is most suitable, based on which
                @type and @mode the consumer supports, and
                preferences specified by the end user (if any).
                Consumers SHOULD NOT render more than one content
                alternative.</t>
            </section>
            
            <section title='"atom:copyright" Element'> 
                <t>The "atom:copyright" element is a Content construct
                that conveys a human-readable copyright statement for
                the entry. atom:entry elements MAY contain an
                atom:copyright element, but MUST NOT contain more than
                one.</t>
    
                <t>The atom:copyright element SHOULD NOT be used to
                convey machine-readable licensing information.</t>
    
                <t>If an atom:entry element does not contain an atom:copyright
                element, then the atom:copyright element of the containing
                atom:feed element's atom:head element, if present, should be
                considered to apply to the entry.</t>
            </section>
            
            <section title='"atom:origin" Element'>
                <t>The "atom:origin" element's content conveys
                the original source of the entry; e.g., the feed where the
                entry was first published.</t>
                     
                <t>If the source is an Atom Feed Document, then the content of
                atom:origin MUST be the same, character-for-character, as that
                of the atom:id element in that document's atom:head section
                (i.e., the XPath expression
                "/atom:feed/atom:head/atom:id").</t>

                <t>The content of this element MUST be a URI. atom:entry
                elements MAY contain an atom:origin element, but MUST NOT
                contain more than one.</t>
            </section>
        </section>	

        <section title="Managing Feed State">
        <t>[[ talk about what it means to keep a view of a feed ]]</t>
        </section>
        
        
        <section title="Securing Atom Documents">
            <t>Because Atom is an XML-based format, existing XML security
            mechanisms can be used to secure its content.</t>

            <t>Note that while these mechanisms are available to secure Atom documents, 
            they should not be used indiscriminately.</t>                

            <section title="Digital Signatures">
                <t>The document element of an Atom document (i.e., atom:feed in an
                Atom Feed Document, atom:entry in an Atom Entry Document) MAY have
                an Enveloped Signature, as described by <xref
                target="W3C.REC-xmldsig-core-20020212">XML-Signature and Syntax
                Processing</xref>. Other XML signature mechanisms MUST NOT be used on
                the document element of an Atom document.</t>
    
                <t>Processors MUST NOT reject an Atom document containing such a
                signature because they are not capable of verifying it; they MUST
                continue processing and MAY inform the user of their failure to
                validate the signature.</t>
            
                <t>In other words, the presence of an element with the namespace
                URI "http://www.w3.org/2000/09/xmldsig#" and a local name of
                "Signature" as a child of the document element must not cause a
                processor to fail merely because of its presence.</t>

                <t>Other elements in an Atom document MUST NOT be signed unless 
                their defintions explicitly specify such a capability.</t>
            </section>
            
            <section title="Encryption">            
                <t>The document element of an Atom document (i.e., atom:feed in an
                Atom Feed Document, atom:entry in an Atom Entry Document) MAY be
                encrypted, using the mechanisms described by <xref
                target="W3C.REC-xmlenc-core-20021210">XML Encryption Syntax and
                Processing</xref>. Other XML encryption mechanisms MUST NOT be used on
                the document element of an Atom document.</t>
            </section>            
        </section>
        
        
        <section title="Embedding Atom in Other Formats">
        <t>[[ ... ]]</t>
        </section>
        
        <section title="Extending Atom">
        <t>[[ ... ]]</t>
        </section>
		
        <section title="IANA Considerations">
            <t>An Atom Document, when serialized as XML 1.0, can be identified
            with the following media type:</t>
        
            <t><list style="hanging">
                <t hangText="MIME media type name:">
                application</t>
                
                <t hangText="MIME subtype name:">
                atom+xml</t>
                
                <t hangText="Mandatory parameters:">
                None.</t>
                
                <t hangText="Optional parameters:">
                    <list style="hanging"> 
                        <t hangText='"charset":'> This parameter has identical
                        semantics to the charset parameter of the
                        "application/xml" media type as specified in RFC 3023
                        <xref target="RFC3023"/>. <xref target="RFC3023"/>.</t>
                    </list>
                </t>
        
                <t hangText="Encoding considerations:"> Identical to those of
                "application/xml" as described in RFC 3023 <xref
                target="RFC3023"/>, section 3.2.</t>
                
                <t hangText="Security considerations:">
                As defined in this specification. [[update upon publication]]
                </t>
            
                <t>In addition, as this media type uses the "+xml" convention,
                it shares the same security considerations as described in RFC
                3023 <xref target="RFC3023"/>, section 10.</t>
                 
                <t hangText="Interoperability considerations:">
                There are no known interoperability issues.</t>
                
                <t hangText="Published specification:">
                This specification. [[update upon publication]]</t>
                
                <t hangText="Applications which use this media type:">
                No known applications currently use this media type.</t>
            </list></t>
                
            <t>Additional information:</t>
                
            <t><list style="hanging">
                <t hangText="Magic number(s):">
                As specified for "application/xml" in RFC 3023
                <xref target="RFC3023"/>, section 3.2.</t>
                
                <t hangText="File extension:">
                .atom</t>
                
                <t hangText="Fragment identifiers:">
                As specified for "application/xml" in RFC 3023
                <xref target="RFC3023"/>, section 5.</t>
                
                <t hangText="Base URI:">
                As specified in RFC 3023 <xref target="RFC3023"/>, section 6.</t>
                
                <t hangText="Macintosh File Type code:">
                TEXT</t>
                
                <t hangText="Person and email address to contact for further
                information:"> Mark Nottingham &lt;mnot@pobox.com&gt;</t>
                
                <t hangText="Intended usage:">
                COMMON</t>
                
                <t hangText="Author/Change controller:">
                This specification's author(s). [[update upon publication]]</t>
            </list></t>
        </section>
        
        <section title="Security Considerations">
            <t>Atom document can be encrypted and signed using <xref
            target="W3C.REC-xmlenc-core-20021210"/> and <xref
            target="W3C.REC-xmldsig-core-20020212"/>, respectively, and is
            subject to the security considerations implied by their use. </t>
        </section>
    </middle>

    <back>
        <references title="Normative References">
            <reference anchor="Atom-protocol">
                <front>
                    <title>The Atom Publishing Protocol</title>
                    <author initials="J." surname="Gregorio" fullname="J.Gregorio">
                        <organization>BitWorking, Inc</organization></author>
                    <author initials="R." surname="Sayre" fullname="R. Sayre">
                        <organization>Boswijck Memex Consulting</organization></author>
                    <date month="July" year="2004" />
                </front>
                <seriesInfo name="" value="work-in-progress" />
            </reference>
            <reference anchor="Atom-autodiscovery">
                <front>
                    <title>Atom Feed Autodiscovery</title>
                    <author initials="M." surname="Pilgrim" fullname="Mark Pilgrim">
                        <organization>IBM</organization>
                    </author>
                    <date month="August" year="2004" />
                </front>
                <seriesInfo name="" value="work-in-progress" />
            </reference>
            &rfc2045; &rfc2119; &rfc2396; &rfc2822; &rfc3023; &rfc3066; &rfc3339; &dateTime; &infoset; &xmlbase; &xmlns; &xml; &xmlsig; &xmlenc;
        </references>
        
        <section title="Contributors">
        <t>The following people contributed to preliminary drafts of this document:
           Tim Bray, Mark Pilgrim, and Sam Ruby. The content and concepts within are 
           a product of the Atom community and the Atom Publishing Format and Protocol 
           Working Group.</t>
        </section>
        <section title="Revision History">
          <t>[[ this section should be removed before final publication. ]]</t>
        	<t><list style="hanging">
        	      <t hangText="-02: ">Removed entry/modified, entry/issued, entry/created; added entry/updated (PaceDateUpdated).</t>
        	      <t>Changed date construct from W3C date-time to RFC3339 (PaceDateUpdated).</t>
        	      <t>Feed links to HTML pages should be reflected back (PaceLinkReflection).</t>
        	      <t>Added Identity construct (PaceIdConstruct).</t>
        	      <t>Changed feed/id and entry/id to be Identity constructs (PaceIdConstruct).</t>
        	      <t>Changed entry/origin's content so that it's the same as the feed's id, rather than its link/@rel="alternate" (PaceIdConstruct).</t>
                <t>Added "Securing Atom Documents" (PaceDigitalSignatures).</t>
                <t hangText="-01: ">Constrained omission of "Information Item" to just elements and attributes.</t>        	    
                <t>Clarified xml:lang inheritence.</t>
                <t>Removed entry- and feed-specific langauge about xml:lang (covered by general discussion of xml:lang)</t>
                <t>Changed xml:lang to reference XML for normative requirements.</t>
                <t>Changed "... MUST be a string" to "... is unstructued text."</t>
                <t>Remomved langauge about DOCTYPEs, PIs, Comments, Entities.</t>
                <t>Changed atom:url to atom:uri, @url to @uri</t>
                <t>Introduced atom:head</t>
                <t>Introduced "Atom Feed Document" and "Atom Entry Document".</t>
                <t>Removed requirement for all elements and attributes to be namespace-qualified; now
                children of selective elements</t>
                <t>Added extensibility to Person constructs.</t>
                <t>Removed requirement for media types to be registered (non-registered media types are legal)</t>
                <t>Added atom:origin (PaceEntryOrigin)</t>
                <t>Added requirement for entry/id to be present and a URI (PaceEntryIdRequired).</t>
                <t>Clarified approach to Comments, PIs and well-formedness, as per RFC3470.</t>
                <t>Referenced escaping algorithm in XML.</t>
                <t>Assorted editorial nits and cleanup, refactoring</t>
                <t hangText="-00: ">Initial IETF Internet-Draft submission.</t>
                <t>Added optional version attribute to entry (PaceEntryElementNeedsVersionAttribute).</t>
                <t>Added hreflang attribute (PaceHrefLang).</t>
                <t>Clarified inheritence of copyright element (PaceItemCopyright).</t>
                <t>Added xml:lang to entries (PaceItemLang).</t>
                <t>Tweaked Infoset-related language (PaceNoInfoSet).</t>
                <t>Clarified lack of structure in version attribute (PaceVersionAsText).</t>
                <t>Changed approach to XML Base (PaceXmlBaseEverywhere).</t>
                <t>Added XML Base processing to atom:id (PaceXmlBaseId).</t>
                <t>Various editorial cleanup and adjustments for IETF publication.</t>
            </list></t>
        </section>
    </back>

</rfc>