<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-nottingham-variants-01" category="std" updates="7234">

  <front>
    <title>HTTP Representation Variants</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization>Fastly</organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2017"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification introduces the HTTP <spanx style="verb">Variants</spanx> response header field to communicate what representations are available for a given resource.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="emph">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/mnot/I-D/labels/variants">https://github.com/mnot/I-D/labels/variants</eref>.</t>

<t>The most recent (often, unpublished) draft is at <eref target="https://mnot.github.io/I-D/variants/">https://mnot.github.io/I-D/variants/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/mnot/I-D/commits/gh-pages/variants">https://github.com/mnot/I-D/commits/gh-pages/variants</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-nottingham-variants/">https://datatracker.ietf.org/doc/draft-nottingham-variants/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>HTTP proactive content negotiation (<xref target="RFC7231"/>, Section 3.4.1) is starting to be used more widely again. The most widely seen use – determining a response’s content-coding – is being joined by renewed interest in negotiation for language and other, newer attributes (for example, see <xref target="I-D.ietf-httpbis-client-hints"/>).</t>

<t>Successfully reusing negotiated responses that have been stored in a HTTP cache requires establishment of a secondary cache key (<xref target="RFC7234"/>, Section 4.1) using the Vary header (<xref target="RFC7231"/>, Section 7.1.4), which identifies the request headers that form the secondary cache key for a given response.</t>

<t>HTTP’s caching model allows a certain amount of latitude in normalising request header fields to match those stored in the cache, so as to increase the chances of a cache hit while still respecting the semantics of that header. However, this is often inadequate; even with understanding of the headers’ semantics to facilitate such normalisation, a cache does not know enough about the possible alternative representations available on the origin server to make an appropriate decision.</t>

<t>For example, if a cache has stored the following request/response pair:</t>

<figure><artwork><![CDATA[
GET /foo HTTP/1.1
Host: www.example.com
Accept-Language: en;q=1.0, fr;q=0.5

HTTP/1.1 200 OK
Content-Type: text/html
Content-Language: fr
Vary: Accept-Language
Transfer-Encoding: chunked

[French content]
]]></artwork></figure>

<t>Provided that the cache has full knowledge of the semantics of <spanx style="verb">Accept-Language</spanx> and <spanx style="verb">Content-Language</spanx>, it will know that a French representation is available and might be able to infer that an English representation is not available. But, it does not know (for example) whether a Japanese representation is available without making another request, thereby incurring possibly unnecessary latency.</t>

<t>This specification introduces the HTTP <spanx style="verb">Variants</spanx> response header field to enumerate the available variant representations on the origin server, to provide clients and caches with enough information to properly satisfy requests – either by selecting a response from cache or by forwarding the request towards the origin.</t>

<t><spanx style="verb">Variants</spanx> is best used when content negotiation takes place over a constrained set of representations; since each variant needs to be listed in the header field, it is ill-suited for open-ended sets of representations. Likewise, it works best for content negotiation over header fields whose semantics are well-understood, since it requires a selection algorithm to be specified ahead of time.</t>

<t>This header field is a simpler version of the <spanx style="verb">Alternates</spanx> header field introduced by <xref target="RFC2295"/>; unlike that mechanism, <spanx style="verb">Variants</spanx> does not require specification of each combination of attributes, and does not assume that each combination has a unique URL.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as
shown here.</t>

<t>This specification uses the Augmented Backus-Naur Form (ABNF) notation of <xref target="RFC5234"/> with a list extension, defined in Section 7 of <xref target="RFC7230"/>, that allows for compact definition of comma-separated lists using a ‘#’ operator (similar to how the ‘*’ operator indicates repetition).</t>

<t>Additionally, it uses the “field-name”, “OWS” and “token” rules from <xref target="RFC7230"/>.</t>

</section>
</section>
<section anchor="the-variants-http-header-field" title="The “Variants” HTTP Header Field">

<t>The <spanx style="verb">Variants</spanx> HTTP response header field is used to indicate what other representations are available for a given resource at the time that the response is produced.</t>

<figure><artwork><![CDATA[
Variants        = 1#variant
variant         = field-name *( OWS ";" OWS available-value )
available-value = token
]]></artwork></figure>

<t>Each <spanx style="verb">variant</spanx> indicates a response header field that carries a value that clients might proactively negotiate for; each parameter on it indicates a value for which there is an available representation on the origin server.</t>

<t>So, given this example header field:</t>

<figure><artwork><![CDATA[
Variants: Content-Encoding;gzip
]]></artwork></figure>

<t>a recipient can infer that the only content-coding available for that resource is “gzip” (along with the “identity” non-encoding; see {{content-encoding}).</t>

<t>Given:</t>

<figure><artwork><![CDATA[
Variants: content-encoding
]]></artwork></figure>

<t>a recipient can infer that no content-codings are supported. Note that as always with header field names, it is case-insensitive.</t>

<t>A more complex example:</t>

<figure><artwork><![CDATA[
Variants: Content-Encoding;gzip;brotli, Content-Language;en ;fr
]]></artwork></figure>

<t>Here, recipients can infer that two Content-Encodings are available, as well as two content languages. Note that, as with all HTTP header fields that use the “#” list rule (see <xref target="RFC7230"/>, Section 7), they might occur in the same header field or separately, like this:</t>

<figure><artwork><![CDATA[
Variants: Content-Encoding;gzip;brotli
Variants: Content-Language;en ;fr
]]></artwork></figure>

<t>The ordering of available-values after the field-name is significant, as it might be used by the header’s algorithm for selecting a response.</t>

<t>Senders SHOULD consistently send <spanx style="verb">Variant</spanx> header fields on all cacheable (as per <xref target="RFC7234"/>, Section 3) responses for a resource, since its absence will trigger caches to fall back to <spanx style="verb">Vary</spanx> processing.</t>

<t>Likewise, servers MUST send the <spanx style="verb">Content-*</spanx> response headers nominated by <spanx style="verb">Variants</spanx> when sending that header.</t>

<section anchor="defining-content-negotiation-using-variants" title="Defining Content Negotiation Using Variants">

<t>To be usable with Variants, proactive content negotiation mechanisms need to be specified to take advantage of it. Specifically, they:</t>

<t><list style="symbols">
  <t>MUST define a request header field that advertises the clients preferences or capabilities, whose field-name SHOULD begin with “Accept-“.</t>
  <t>MUST define a response header field that indicates the result of selection, whose field-name SHOULD begin with “Content-“ and whose field-value SHOULD be a token.</t>
  <t>MUST define an algorithm for selecting a result. It MUST return an ordered list of selected responses, given the incoming request, a list of selected responses, and the list of available values from <spanx style="verb">Variants</spanx>. If the result is an empty list, it implies that the cache does not contain an appropriate response.</t>
</list></t>

<t><xref target="backports"/> fulfils these requirements for some existing proactive content negotiation mechanisms in HTTP.</t>

<t>Note that unlike Vary, Variants does not use stored request headers to help select a response; this is why defining a response header to aid identification and selection is required.</t>

</section>
<section anchor="cache" title="Cache Behaviour">

<t>Caches that implement the <spanx style="verb">Variants</spanx> header field and the relevant semantics of the field-name it contains can use that knowledge to either select an appropriate stored representation, or forward the request if no appropriate representation is stored.</t>

<t>They do so by running this algorithm (or its functional equivalent) upon receiving a request, <spanx style="verb">incoming-request</spanx>:</t>

<t><list style="numbers">
  <t>Let <spanx style="verb">selected-responses</spanx> be a list of the stored responses suitable for reuse as defined in <xref target="RFC7234"/> Section 4, excepting the requirement to calculate a secondary cache key.</t>
  <t>Order <spanx style="verb">selected-responses</spanx> by the “Date” header field, most recent to least recent.</t>
  <t>If the freshest (as per <xref target="RFC7234"/>, Section 4.2) has one or more <spanx style="verb">Variants</spanx> header field(s):
  <list style="numbers">
      <t>Select one member of <spanx style="verb">selected-responses</spanx> and let its “Variants” header field-value(s) be <spanx style="verb">Variants</spanx>. This SHOULD be the most recent response, but MAY be from an older one as long as it is still fresh.</t>
      <t>For each <spanx style="verb">variant</spanx> in <spanx style="verb">Variants</spanx>:
      <list style="numbers">
          <t>If the <spanx style="verb">field-name</spanx> corresponds to the response header field identified by a content negotiation mechanism that the implementation supports:
          <list style="numbers">
              <t>Let <spanx style="verb">available-values</spanx> be a list containing all <spanx style="verb">available-value</spanx> for the <spanx style="verb">variant</spanx>.</t>
              <t>Let <spanx style="verb">selected-responses</spanx> be the result of running the algorithm defined by the content negotiation mechanism with <spanx style="verb">incoming-request</spanx>, <spanx style="verb">selected-responses</spanx> and <spanx style="verb">available-values</spanx>.</t>
              <t>For the purposes of selecting a response, ignore the content negotiation’s identified request header field-name in the “Vary” header field of each member of <spanx style="verb">selected-responses</spanx>, if present.</t>
            </list></t>
        </list></t>
    </list></t>
  <t>Process any member of <spanx style="verb">selected-responses</spanx> that has a “Vary” response header field whose field-value still contains one or more <spanx style="verb">field-name</spanx>s, removing that members if it does not match (as per <xref target="RFC7234"/>, Section 4.1).</t>
  <t>Return the first member of <spanx style="verb">selected-responses</spanx>. If <spanx style="verb">selected-responses</spanx> is empty, return <spanx style="verb">null</spanx>.</t>
</list></t>

<t>This algorithm will either return the appropriate stored response to use, or <spanx style="verb">null</spanx> if the cache needs to forward the request towards the origin server.</t>

<section anchor="relationship-to-vary" title="Relationship to Vary">

<t>Caches that fully implement this specification MUST ignore request header-fields in the <spanx style="verb">Vary</spanx> header for the purposes of secondary cache key calculation (<xref target="RFC7234"/>, Section 4.1) when their semantics are understood, implemented as per this specification, and their corresponding response header field is listed in <spanx style="verb">Variants</spanx>.</t>

<t>Request header fields listed in <spanx style="verb">Vary</spanx> that are not implemented in terms of this specification or not present in the <spanx style="verb">Variants</spanx> field SHOULD still form part of the secondary cache key.</t>

<t>The algorithm in <xref target="cache"/> implements these requirements.</t>

</section>
</section>
<section anchor="examples" title="Examples">

<section anchor="single-variant" title="Single Variant">

<t>Given a request/response pair:</t>

<figure><artwork><![CDATA[
GET /foo HTTP/1.1
Host: www.example.com
Accept-Language: en;q=1.0, fr;q=0.5

HTTP/1.1 200 OK
Content-Type: image/gif
Content-Language: en
Cache-Control: max-age=3600
Variants: Content-Language;en;de
Vary: Accept-Language
Transfer-Encoding: chunked
]]></artwork></figure>

<t>Upon receipt of this response, the cache knows that two representations of this resource are available, one with a <spanx style="verb">Content-Language</spanx> of “en”, and another whose <spanx style="verb">Content-Language</spanx> is “de”.</t>

<t>Subsequent requests (while this response is fresh) will cause the cache to either reuse this response or forward the request, depending on what the selection algorithm <spanx style="verb">Accept-Language</spanx> and <spanx style="verb">Content-Language</spanx> determines.</t>

<t>So, a request with “en” in <spanx style="verb">Accept-Language</spanx> is received and its q-value indicates that it is acceptable, the stored response is used. A request that indicates that “de” is acceptable will be forwarded to the origin, thereby populating the cache. A cache receiving a request that indicates both languages are acceptable will use the q-value to make a determination of what response to return.</t>

<t>A cache receiving a request that does not list either language as acceptable (or does not contain an Accept-Language at all) will return the “en” representation (possibly fetching it from the origin), since it is listed first in the <spanx style="verb">Variants</spanx> list.</t>

<t>Note that <spanx style="verb">Accept-Language</spanx> is listed in Vary, to assure backwards-compatibility with caches that do not support <spanx style="verb">Variants</spanx>.</t>

<t>Also, note that is is the response header which is listed in Variants, not the request header (the opposite of Vary).</t>

</section>
<section anchor="multiple-variants" title="Multiple Variants">

<t>A more complicated request/response pair:</t>

<figure><artwork><![CDATA[
GET /bar HTTP/1.1
Host: www.example.net
Accept-Language: en;q=1.0, fr;q=0.5
Accept-Encoding: gzip, br

HTTP/1.1 200 OK
Content-Type: image/gif
Content-Language: en
Content-Encoding: br
Variants: Content-Language;en;jp;de
Variants: Content-Encoding;br;gzip
Vary: Accept-Language, Accept-Encoding
Transfer-Encoding: chunked
]]></artwork></figure>

<t>Here, the cache knows that there are two axes that the response varies upon; <spanx style="verb">Content-Language</spanx> and <spanx style="verb">Content-Encoding</spanx>. Thus, there are a total of six possible representations for the resource, and the cache needs to consider the selection algorithms for both axes.</t>

<t>Upon a subsequent request, if both selection algorithms return a stored representation, it can be served from cache; otherwise, the request will need to be forwarded to origin.</t>

</section>
<section anchor="partial-coverage" title="Partial Coverage">

<t>Now, consider the previous example, but where only one of the varied axes is listed in <spanx style="verb">Variants</spanx>:</t>

<figure><artwork><![CDATA[
GET /bar HTTP/1.1
Host: www.example.net
Accept-Language: en;q=1.0, fr;q=0.5
Accept-Encoding: gzip, br

HTTP/1.1 200 OK
Content-Type: image/gif
Content-Language: en
Content-Encoding: br
Variants: Content-Encoding;br;gzip
Vary: Accept-Language, Accept-Encoding
Transfer-Encoding: chunked
]]></artwork></figure>

<t>Here, the cache will need to calculate a secondary cache key as per <xref target="RFC7234"/>, Section 4.1 – but considering only <spanx style="verb">Accept-Language</spanx> to be in its field-value – and then continue processing <spanx style="verb">Variants</spanx> for the set of stored responses that the algorithm described there selects.</t>

</section>
</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This specification registers one value in the Permanent Message Header Field Names registry established by <xref target="RFC3864"/>:</t>

<t><list style="symbols">
  <t>Header field name: Variants</t>
  <t>Applicable protocol: http</t>
  <t>Status: standard</t>
  <t>Author/Change Controller: IETF</t>
  <t>Specification document(s): [this document]</t>
  <t>Related information:</t>
</list></t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If the number or advertised characteristics of the representations available for a resource are considered sensitive, the <spanx style="verb">Variants</spanx> header by its nature will leak them.</t>

<t>Note that the <spanx style="verb">Variants</spanx> header is not a commitment to make representations of a certain nature available; the runtime behaviour of the server always overrides hints like <spanx style="verb">Variants</spanx>.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>This protocol is conceptually similar to, but simpler than, Transparent Content Negotiation <xref target="RFC2295"/>. Thanks to its authors for their inspiration.</t>

<t>It is also a generalisation of a Fastly VCL feature designed by Rogier ‘DocWilco’ Mulhuijzen.</t>

<t>Thanks to Hooman Beheshti for his review and input.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC5234" target='https://www.rfc-editor.org/info/rfc5234'>
<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author initials='D.' surname='Crocker' fullname='D. Crocker' role='editor'><organization /></author>
<author initials='P.' surname='Overell' fullname='P. Overell'><organization /></author>
<date year='2008' month='January' />
<abstract><t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='68'/>
<seriesInfo name='RFC' value='5234'/>
<seriesInfo name='DOI' value='10.17487/RFC5234'/>
</reference>



<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC4647" target='https://www.rfc-editor.org/info/rfc4647'>
<front>
<title>Matching of Language Tags</title>
<author initials='A.' surname='Phillips' fullname='A. Phillips'><organization /></author>
<author initials='M.' surname='Davis' fullname='M. Davis'><organization /></author>
<date year='2006' month='September' />
<abstract><t>This document describes a syntax, called a &quot;language-range&quot;, for specifying items in a user's list of language preferences.  It also describes different mechanisms for comparing and matching these to language tags.  Two kinds of matching mechanisms, filtering and lookup, are defined.  Filtering produces a (potentially empty) set of language tags, whereas lookup produces a single language tag. Possible applications include language negotiation or content selection.  This document, in combination with RFC 4646, replaces RFC 3066, which replaced RFC 1766.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='47'/>
<seriesInfo name='RFC' value='4647'/>
<seriesInfo name='DOI' value='10.17487/RFC4647'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-httpbis-client-hints">
<front>
<title>HTTP Client Hints</title>

<author initials='I' surname='Grigorik' fullname='Ilya Grigorik'>
    <organization />
</author>

<date month='April' day='18' year='2017' />

<abstract><t>An increasing diversity of Web-connected devices and software capabilities has created a need to deliver optimized content for each device.  This specification defines a set of HTTP request header fields, colloquially known as Client Hints, to address this.  They are intended to be used as input to proactive content negotiation; just as the Accept header field allows user agents to indicate what formats they prefer, Client Hints allow user agents to indicate device and agent specific preferences.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-httpbis-client-hints-04' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-httpbis-client-hints-04.txt' />
</reference>



<reference  anchor="RFC2295" target='https://www.rfc-editor.org/info/rfc2295'>
<front>
<title>Transparent Content Negotiation in HTTP</title>
<author initials='K.' surname='Holtman' fullname='K. Holtman'><organization /></author>
<author initials='A.' surname='Mutz' fullname='A. Mutz'><organization /></author>
<date year='1998' month='March' />
<abstract><t>HTTP allows web site authors to put multiple versions of the same information under a single URL.  Transparent content negotiation is an extensible negotiation mechanism, layered on top of HTTP, for automatically selecting the best version when the URL is accessed.  This enables the smooth deployment of new web data formats and markup tags. This memo defines an Experimental Protocol for the Internet community. It does not specify an Internet standard of any kind.  Discussion and suggestions for improvement are requested.</t></abstract>
</front>
<seriesInfo name='RFC' value='2295'/>
<seriesInfo name='DOI' value='10.17487/RFC2295'/>
</reference>



<reference  anchor="RFC3864" target='https://www.rfc-editor.org/info/rfc3864'>
<front>
<title>Registration Procedures for Message Header Fields</title>
<author initials='G.' surname='Klyne' fullname='G. Klyne'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='J.' surname='Mogul' fullname='J. Mogul'><organization /></author>
<date year='2004' month='September' />
<abstract><t>This specification defines registration procedures for the message header fields used by Internet mail, HTTP, Netnews and other applications.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='90'/>
<seriesInfo name='RFC' value='3864'/>
<seriesInfo name='DOI' value='10.17487/RFC3864'/>
</reference>




    </references>


<section anchor="backports" title="Variants and Defined Content Negotiation Mechanisms">

<t>This appendix defines the required information to use existing proactive content negotiation mechanisms (as defined in <xref target="RFC7231"/>, Section 5.3) with the <spanx style="verb">Variants</spanx> header field.</t>

<section anchor="content-encoding" title="Content-Encoding">

<t>When negotiating for the <spanx style="verb">Content-Encoding</spanx> response header field’s value, the applicable request header field is <spanx style="verb">Accept-Encoding</spanx>, as per <xref target="RFC7231"/> Section 5.3.4.</t>

<t>To perform content negotiation for Content-Encoding given an <spanx style="verb">incoming-request</spanx>, <spanx style="verb">stored-responses</spanx> and <spanx style="verb">available-values</spanx>:</t>

<t><list style="numbers">
  <t>Let <spanx style="verb">preferred-codings</spanx> be a list of the <spanx style="verb">coding</spanx>s in the “Accept-Encoding” header field of <spanx style="verb">incoming-request</spanx>, ordered by their <spanx style="verb">weight</spanx>, highest to lowest. If “Accept-Encoding” is not present or empty, <spanx style="verb">preferred-codings</spanx> will be empty.</t>
  <t>If <spanx style="verb">identity</spanx> is not a member of <spanx style="verb">preferred-codings</spanx>, append <spanx style="verb">identity</spanx> to <spanx style="verb">preferred-codings</spanx> with a <spanx style="verb">weight</spanx> of 0.001.</t>
  <t>Remove any member of <spanx style="verb">preferred-codings</spanx> whose <spanx style="verb">weight</spanx> is 0.</t>
  <t>Append “identity” to <spanx style="verb">available-values</spanx>.</t>
  <t>Remove any member of <spanx style="verb">available-values</spanx> not present in <spanx style="verb">preferred-codings</spanx>, comparing in a case-insensitive fashion.</t>
  <t>Let <spanx style="verb">filtered-responses</spanx> be an empty list.</t>
  <t>For each <spanx style="verb">available-value</spanx> of <spanx style="verb">available-values</spanx>:
  <list style="numbers">
      <t>If there is a member of <spanx style="verb">stored-responses</spanx> whose “Content-Encoding” field-value has <spanx style="verb">content-coding</spanx>s (<xref target="RFC7231"/>, Section 3.1.2.2) that all match members of <spanx style="verb">available-value</spanx> in a case-insensitive fashion, append that stored response to <spanx style="verb">filtered-responses</spanx>.</t>
    </list></t>
  <t>If there is a member of <spanx style="verb">stored-responses</spanx> that does not have a “Content-Encoding” header field, append that stored response to <spanx style="verb">filtered-responses</spanx>.</t>
  <t>Return <spanx style="verb">filtered-responses</spanx>.</t>
</list></t>

<t>This algorithm selects the stored response(s) in order of preference by the client; if none are stored in cache, the request will be forwarded towards the origin. It defaults to the “identity” non-encoding.</t>

<t>Implementations MAY remove members of <spanx style="verb">filtered-responses</spanx> based upon their <spanx style="verb">weight</spanx> or other criteria before returning. For example, they might wish to return an empty list when the client’s most-preferred available response is not stored, so as to populate the cache as well as honour the client’s preferences.</t>

</section>
<section anchor="content-language" title="Content-Language">

<t>When negotiating for the <spanx style="verb">Content-Language</spanx> response header field’s value, the applicable request header field is <spanx style="verb">Accept-Language</spanx>, as per <xref target="RFC7231"/> Section 5.3.5.</t>

<t>To perform content negotiation for Content-Language given an <spanx style="verb">incoming-request</spanx>, <spanx style="verb">stored-responses</spanx> and <spanx style="verb">available-values</spanx>:</t>

<t><list style="numbers">
  <t>Let <spanx style="verb">preferred-langs</spanx> be a list of the <spanx style="verb">language-range</spanx>s in the “Accept-Language” header field (<xref target="RFC7231"/>, Section 5.3.5) of <spanx style="verb">incoming-request</spanx>, ordered by their <spanx style="verb">weight</spanx>, highest to lowest.</t>
  <t>If <spanx style="verb">preferred-langs</spanx> is empty, append “*” with a <spanx style="verb">weight</spanx> of 0.001.</t>
  <t>Remove any member of <spanx style="verb">preferred-langs</spanx> whose <spanx style="verb">weight</spanx> is 0.</t>
  <t>Filter <spanx style="verb">available-values</spanx> using <spanx style="verb">preferred-langs</spanx> with either the Basic Filtering scheme defined in <xref target="RFC4647"/> Section 3.3.1, or the Lookup scheme defined in Section 3.4 of that document. Use the first member of <spanx style="verb">available-values</spanx> as the default.</t>
  <t>Let <spanx style="verb">filtered-responses</spanx> be an empty list.</t>
  <t>For each <spanx style="verb">available-value</spanx> of <spanx style="verb">available-values</spanx>:
  <list style="numbers">
      <t>If there is a member of <spanx style="verb">stored-responses</spanx> whose “Content-Language” field-value has a <spanx style="verb">language-tag</spanx> (<xref target="RFC7231"/>, Section 3.1.3.2) that matches <spanx style="verb">available-value</spanx> in a case-insensitive fashion, append that stored response to <spanx style="verb">filtered-responses</spanx>.</t>
    </list></t>
  <t>Return <spanx style="verb">filtered-responses</spanx>.</t>
</list></t>

<t>This algorithm selects the available response(s) (according to <spanx style="verb">Variants</spanx>) in order of preference by the client; if none are stored in cache, the request will be forwarded towards the origin. If no preferred language can be selected, the first <spanx style="verb">available-value</spanx> will be used as the default.</t>

<t>Implementations MAY remove members of <spanx style="verb">filtered-responses</spanx> based upon their <spanx style="verb">weight</spanx> or other criteria before returning. For example, they might wish to return an empty list when the client’s most-preferred available response is not stored, so as to populate the cache as well as honour the client’s preferences.</t>

</section>
</section>


  </back>

<!-- ##markdown-source:
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
AA==

-->

</rfc>

