<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfc2629xslt/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-nottingham-variant-00" category="std" updates="7234">

  <front>
    <title>HTTP Variants</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization>Fastly</organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2017"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification introduces the HTTP <spanx style="verb">Variants</spanx> response header field to communicate what representations are available for a given resource.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="emph">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/mnot/I-D/labels/variant">https://github.com/mnot/I-D/labels/variant</eref>.</t>

<t>The most recent (often, unpublished) draft is at <eref target="https://mnot.github.io/I-D/variant/">https://mnot.github.io/I-D/variant/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/mnot/I-D/commits/gh-pages/variant">https://github.com/mnot/I-D/commits/gh-pages/variant</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-nottingham-variant/">https://datatracker.ietf.org/doc/draft-nottingham-variant/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>HTTP proactive content negotiation (<xref target="RFC7231"/>, Section 3.4.1) is increasingly being used to determine not only a response’s content-coding, but also its language, as well as newer axes (for example, see <xref target="I-D.ietf-httpbis-client-hints"/>).</t>

<t>Successfully reusing negotiated responses that have been stored in a HTTP cache requires establishment of a secondary cache key (<xref target="RFC7234"/>, Section 4.1) using the Vary header (<xref target="RFC7231"/>, Section 7.1.4).</t>

<t>HTTP’s caching model allows a certain amount of latitude in normalising request header fields to match those stored in the cache, so as to increase the chances of a cache hit while still respecting the semantics of that header. However, this is often inadequate; even with understanding of the headers’ semantics to facilitate such normalisation, a cache does not know enough about the possible alternative representations available on the origin server to make an appropriate decision.</t>

<t>For example, if a cache has stored the following request/response pair:</t>

<figure><artwork><![CDATA[
GET /foo HTTP/1.1
Host: www.example.com
Accept-Language: en;q=1.0, fr;q=0.5

HTTP/1.1 200 OK
Content-Type: text/html
Content-Language: fr
Vary: Accept-Language
Transfer-Encoding: chunked

[French content]
]]></artwork></figure>

<t>Provided that the cache has full knowledge of the semantics of <spanx style="verb">Accept-Language</spanx> and <spanx style="verb">Content-Language</spanx>, it will know that a French representation is available and might be able to infer that an English representation is not available. But, it does not know (for example) whether a Japanese representation is available without making another request, thereby incurring possibly unnecessary latency.</t>

<t>This specification introduces the HTTP <spanx style="verb">Variants</spanx> response header field to address this shortcoming by communicating what representations are available for a given resource. This information enables caches that understand <spanx style="verb">Variants</spanx> to correctly select the most appropriate stored response, properly forwarding requests that cannot be satisfied.</t>

<t><spanx style="verb">Variants</spanx> is best used when content negotiation takes place over a known, constrained set of representations. Since each variant needs to be listed in the header field, it is ill-suited for open-ended sets of representations. Likewise, it works best for content negotiation over header fields whose semantics are well-understood, since it requires a selection algorithm to be specified ahead of time.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"/>.</t>

<t>This specification uses the Augmented Backus-Naur Form (ABNF) notation of <xref target="RFC5234"/> with a list extension, defined in Section 7 of <xref target="RFC7230"/>, that allows for compact definition of comma-separated lists using a ‘#’ operator (similar to how the ‘*’ operator indicates repetition).</t>

<t>Additionally, it uses the “field-name”, “OWS” and “token” rules from <xref target="RFC7230"/>.</t>

</section>
</section>
<section anchor="the-variants-http-header-field" title="The “Variants” HTTP Header Field">

<t>The <spanx style="verb">Variant</spanx> HTTP response header field is used to indicate what other representations are available for a given resource at the time that the response is produced.</t>

<figure><artwork><![CDATA[
Variants        = 1#variant
variant         = field-name *( OWS ";" OWS available-value )
available-value = token
]]></artwork></figure>

<t>Each <spanx style="verb">variant</spanx> indicates a response header field that carries a value that clients might proactively negotiate for; each parameter on it indicates a value for which there is an available representation on the origin server.</t>

<t>So, given this example header field:</t>

<figure><artwork><![CDATA[
Variants: Content-Encoding;gzip
]]></artwork></figure>

<t>a recipient can infer that the only content-coding available for that resource is “gzip” (along with the “identity” non-encoding; see {{content-encoding}).</t>

<t>Given:</t>

<figure><artwork><![CDATA[
Variants: content-encoding
]]></artwork></figure>

<t>a recipient can infer that no content-codings are supported. Note that as always with header field names, it is case-insensitive.</t>

<t>A more complex example:</t>

<figure><artwork><![CDATA[
Variants: DPR;1.0;2.0, Content-Language;en ;fr
]]></artwork></figure>

<t>Here, recipients can infer that two Device Pixel Ratios are available, as well as two content languages. Note that, as with all HTTP header fields that use the “#” list rule (see <xref target="RFC7230"/>, Section 7), they might occur in the same header field or separately.</t>

<t>Note that the ordering of values after the field-name is significant, as it might be used by the header’s algorithm for selecting a response.</t>

<t>Senders SHOULD consistently send <spanx style="verb">Variant</spanx> on all cacheable (as per <xref target="RFC7234"/>, Section 3) responses for a resource, since its absence will trigger caches to fall back to <spanx style="verb">Vary</spanx> processing.</t>

<t>Likewise, servers MUST send the <spanx style="verb">Content-*</spanx> response headers nominated by <spanx style="verb">Variants</spanx> when sending that header.</t>

<section anchor="defining-content-negotiation-using-variants" title="Defining Content Negotiation Using Variants">

<t>To be usable with Variants, proactive content negotiation mechanisms need to be specified to take advantage of it. Specifically, they:</t>

<t><list style="symbols">
  <t>MUST define a request header field that advertises the clients preferences or capabilities, whose field-name SHOULD begin with “Accept-“.</t>
  <t>MUST define a response header field that indicates the result of selection, whose field-name SHOULD begin with “Content-“ and whose field-value SHOULD be a token.</t>
  <t>MUST define an algorithm for selecting a result, given a request header field value. It MUST return an ordered list of selected responses, given the incoming request, a list of selected responses, and the list of available values from <spanx style="verb">Variants</spanx>.</t>
</list></t>

<t><xref target="backports"/> fulfils these requirements for some existing proactive content negotiation mechanisms in HTTP.</t>

</section>
<section anchor="cache" title="Cache Behaviour">

<t>Caches that implement the <spanx style="verb">Variants</spanx> header field and the relevant semantics of the field-name it contains can use that knowledge to either select an appropriate stored representation, or forward the request if no appropriate representation is stored.</t>

<t>They do so by running this algorithm (or its functional equivalent) upon receiving a request, <spanx style="verb">incoming-request</spanx>:</t>

<t><list style="numbers">
  <t>Let <spanx style="verb">selected-responses</spanx> be a list of the stored responses suitable for reuse as defined in <xref target="RFC7234"/> Section 4, excepting the requirement to calculate a secondary cache key.</t>
  <t>Order <spanx style="verb">selected-responses</spanx> by the “Date” header field, most recent to least recent.</t>
  <t>If the freshest (as per <xref target="RFC7234"/>, Section 4.2) has one or more <spanx style="verb">Variants</spanx> header field(s):
  <list style="numbers">
      <t>Select one member of <spanx style="verb">selected-responses</spanx> and let its “Variants” header field-value(s) be <spanx style="verb">Variants</spanx>. This SHOULD be the most recent response, but MAY be from an older one as long as it is still fresh.</t>
      <t>For each <spanx style="verb">variant</spanx> in <spanx style="verb">Variants</spanx>:
      <list style="numbers">
          <t>If the <spanx style="verb">field-name</spanx> corresponds to the response header field identified by a content negotiation mechanism that the implementation supports:
          <list style="numbers">
              <t>Let <spanx style="verb">available-values</spanx> be a list containing all <spanx style="verb">available-value</spanx> for the <spanx style="verb">variant</spanx>.</t>
              <t>Let <spanx style="verb">selected-responses</spanx> be the result of running the algorithm defined by the content negotiation mechanism with <spanx style="verb">incoming-request</spanx>, <spanx style="verb">selected-responses</spanx> and <spanx style="verb">available-values</spanx>.</t>
              <t>Remove the content negotiation’s identified request header field-name from the “Vary” header field of each member of <spanx style="verb">selected-responses</spanx>, if present.</t>
            </list></t>
        </list></t>
    </list></t>
  <t>Process any member of <spanx style="verb">selected-responses</spanx> that has a “Vary” response header field whose field-value still contains one or more <spanx style="verb">field-name</spanx>s, removing that members if it does not match (as per <xref target="RFC7234"/>, Section 4.1).</t>
  <t>Return the first member of <spanx style="verb">selected-responses</spanx>. If <spanx style="verb">selected-responses</spanx> is empty, return <spanx style="verb">null</spanx>.</t>
</list></t>

<t>This algorithm will either return the appropriate stored response to use, or <spanx style="verb">null</spanx> if the cache needs to forward the request towards the origin server.</t>

<section anchor="relationship-to-vary" title="Relationship to Vary">

<t>Caches that fully implement this specification MUST ignore request header-fields in the <spanx style="verb">Vary</spanx> header for the purposes of secondary cache key calculation (<xref target="RFC7234"/>, Section 4.1) when their semantics are understood, implemented as per this specification, and their corresponding response header field is listed in <spanx style="verb">Variants</spanx>.</t>

<t>Request header fields listed in <spanx style="verb">Vary</spanx> that are not implemented in terms of this specification or not present in the <spanx style="verb">Variants</spanx> field SHOULD still form part of the secondary cache key.</t>

<t>The algorithm in <xref target="cache"/> implements these requirements.</t>

</section>
</section>
<section anchor="examples" title="Examples">

<section anchor="single-variant" title="Single Variant">

<t>Given a request/response pair:</t>

<figure><artwork><![CDATA[
GET /foo HTTP/1.1
Host: www.example.com
Accept-Language: en;q=1.0, fr;q=0.5

HTTP/1.1 200 OK
Content-Type: image/gif
Content-Language: en
Cache-Control: max-age=3600
Variants: Content-Language;en;de
Vary: Accept-Language
Transfer-Encoding: chunked
]]></artwork></figure>

<t>Upon receipt of this response, the cache knows that two representations of this resource are available, one with a <spanx style="verb">Content-Language</spanx> of “en”, and another whose <spanx style="verb">Content-Language</spanx> is “de”.</t>

<t>Subsequent requests (while this response is fresh) will cause the cache to either reuse this response or forward the request, depending on what the selection algorithm <spanx style="verb">Accept-Language</spanx> and <spanx style="verb">Content-Language</spanx> determines.</t>

<t>So, a request with “en” in <spanx style="verb">Accept-Language</spanx> is received and its q-value indicates that it is acceptable, the stored response is used. A request that indicates that “de” is acceptable will be forwarded to the origin, thereby populating the cache. A cache receiving a request that indicates both languages are acceptable will use the q-value to make a determination of what response to return.</t>

<t>A cache receiving a request that does not list either language as acceptable (or does not contain an Accept-Language at all) will return the “en” representation (possibly fetching it from the origin), since it is listed first.</t>

<t>Note that <spanx style="verb">Accept-Language</spanx> is listed in Vary, to assure backwards-compatibility with caches that do not support <spanx style="verb">Variants</spanx>.</t>

<t>Also, note that response header is listed in <spanx style="verb">Variants</spanx>, not the request header (as is the case with <spanx style="verb">Vary</spanx>).</t>

</section>
<section anchor="multiple-variants" title="Multiple Variants">

<t>A more complicated request/response pair:</t>

<figure><artwork><![CDATA[
GET /bar HTTP/1.1
Host: www.example.net
Accept-Language: en;q=1.0, fr;q=0.5
Accept-Encoding: gzip, br

HTTP/1.1 200 OK
Content-Type: image/gif
Content-Language: en
Content-Encoding: br
Variants: Content-Language;en;jp;de
Variants: Content-Encoding;br;gzip
Vary: Accept-Language, Accept-Encoding
Transfer-Encoding: chunked
]]></artwork></figure>

<t>Here, the cache knows that there are two axes that the response varies upon; <spanx style="verb">Content-Language</spanx> and <spanx style="verb">Content-Encoding</spanx>. Thus, there are a total of six possible representations for the resource, and the cache needs to consider the selection algorithms for both axes.</t>

<t>Upon a subsequent request, if both selection algorithms return a stored representation, it can be served from cache; otherwise, the request will need to be forwarded to origin.</t>

</section>
<section anchor="partial-coverage" title="Partial Coverage">

<t>Now, consider the previous example, but where only one of the varied axes is listed in <spanx style="verb">Variants</spanx>:</t>

<figure><artwork><![CDATA[
GET /bar HTTP/1.1
Host: www.example.net
Accept-Language: en;q=1.0, fr;q=0.5
Accept-Encoding: gzip, br

HTTP/1.1 200 OK
Content-Type: image/gif
Content-Language: en
Content-Encoding: br
Variants: Content-Encoding;br;gzip
Vary: Accept-Language, Accept-Encoding
Transfer-Encoding: chunked
]]></artwork></figure>

<t>Here, the cache will need to calculate a secondary cache key as per <xref target="RFC7234"/>, Section 4.1 – but considering only <spanx style="verb">Accept-Language</spanx> to be in its field-value – and then continue processing <spanx style="verb">Variants</spanx> for the set of stored responses that the algorithm described there selects.</t>

</section>
</section>
</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This specification registers one value in the Permanent Message Header Field Names registry established by <xref target="RFC3864"/>:</t>

<t><list style="symbols">
  <t>Header field name: Variants</t>
  <t>Applicable protocol: http</t>
  <t>Status: standard</t>
  <t>Author/Change Controller: IETF</t>
  <t>Specification document(s): [this document]</t>
  <t>Related information:</t>
</list></t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>If the number or advertised characteristics of the representations available for a resource are considered sensitive, the <spanx style="verb">Variants</spanx> header by its nature will leak them.</t>

<t>Note that the <spanx style="verb">Variants</spanx> header is not a commitment to make representations of a certain nature available; the runtime behaviour of the server always overrides hints like <spanx style="verb">Variants</spanx>.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>This protocol is conceptually similar to, but simpler than, Transparent Content Negotiation <xref target="RFC2295"/>. Thanks to its authors for their inspiration.</t>

<t>It is also a generalisation of a Fastly VCL feature designed by Rogier ‘DocWilco’ Mulhuijzen.</t>

<t>Thanks to Hooman Beheshti for his review and input.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC7231" target='https://www.rfc-editor.org/info/rfc7231'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP/1.1 messages, as expressed by request methods, request header fields, response status codes, and response header fields, along with the payload of messages (metadata and body content) and mechanisms for content negotiation.</t></abstract>
</front>
<seriesInfo name='RFC' value='7231'/>
<seriesInfo name='DOI' value='10.17487/RFC7231'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>



<reference  anchor="RFC5234" target='https://www.rfc-editor.org/info/rfc5234'>
<front>
<title>Augmented BNF for Syntax Specifications: ABNF</title>
<author initials='D.' surname='Crocker' fullname='D. Crocker' role='editor'><organization /></author>
<author initials='P.' surname='Overell' fullname='P. Overell'><organization /></author>
<date year='2008' month='January' />
<abstract><t>Internet technical specifications often need to define a formal syntax.  Over the years, a modified version of Backus-Naur Form (BNF), called Augmented BNF (ABNF), has been popular among many Internet specifications.  The current specification documents ABNF. It balances compactness and simplicity with reasonable representational power.  The differences between standard BNF and ABNF involve naming rules, repetition, alternatives, order-independence, and value ranges.  This specification also supplies additional rule definitions and encoding for a core lexical analyzer of the type common to several Internet specifications.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='68'/>
<seriesInfo name='RFC' value='5234'/>
<seriesInfo name='DOI' value='10.17487/RFC5234'/>
</reference>



<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC4647" target='https://www.rfc-editor.org/info/rfc4647'>
<front>
<title>Matching of Language Tags</title>
<author initials='A.' surname='Phillips' fullname='A. Phillips'><organization /></author>
<author initials='M.' surname='Davis' fullname='M. Davis'><organization /></author>
<date year='2006' month='September' />
<abstract><t>This document describes a syntax, called a &quot;language-range&quot;, for specifying items in a user's list of language preferences.  It also describes different mechanisms for comparing and matching these to language tags.  Two kinds of matching mechanisms, filtering and lookup, are defined.  Filtering produces a (potentially empty) set of language tags, whereas lookup produces a single language tag. Possible applications include language negotiation or content selection.  This document, in combination with RFC 4646, replaces RFC 3066, which replaced RFC 1766.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='47'/>
<seriesInfo name='RFC' value='4647'/>
<seriesInfo name='DOI' value='10.17487/RFC4647'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-httpbis-client-hints">
<front>
<title>HTTP Client Hints</title>

<author initials='I' surname='Grigorik' fullname='Ilya Grigorik'>
    <organization />
</author>

<date month='April' day='18' year='2017' />

<abstract><t>An increasing diversity of Web-connected devices and software capabilities has created a need to deliver optimized content for each device.  This specification defines a set of HTTP request header fields, colloquially known as Client Hints, to address this.  They are intended to be used as input to proactive content negotiation; just as the Accept header field allows user agents to indicate what formats they prefer, Client Hints allow user agents to indicate device and agent specific preferences.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-httpbis-client-hints-04' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-httpbis-client-hints-04.txt' />
</reference>



<reference  anchor="RFC3864" target='https://www.rfc-editor.org/info/rfc3864'>
<front>
<title>Registration Procedures for Message Header Fields</title>
<author initials='G.' surname='Klyne' fullname='G. Klyne'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='J.' surname='Mogul' fullname='J. Mogul'><organization /></author>
<date year='2004' month='September' />
<abstract><t>This specification defines registration procedures for the message header fields used by Internet mail, HTTP, Netnews and other applications.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='90'/>
<seriesInfo name='RFC' value='3864'/>
<seriesInfo name='DOI' value='10.17487/RFC3864'/>
</reference>



<reference  anchor="RFC2295" target='https://www.rfc-editor.org/info/rfc2295'>
<front>
<title>Transparent Content Negotiation in HTTP</title>
<author initials='K.' surname='Holtman' fullname='K. Holtman'><organization /></author>
<author initials='A.' surname='Mutz' fullname='A. Mutz'><organization /></author>
<date year='1998' month='March' />
<abstract><t>HTTP allows web site authors to put multiple versions of the same information under a single URL.  Transparent content negotiation is an extensible negotiation mechanism, layered on top of HTTP, for automatically selecting the best version when the URL is accessed.  This enables the smooth deployment of new web data formats and markup tags. This memo defines an Experimental Protocol for the Internet community. It does not specify an Internet standard of any kind.  Discussion and suggestions for improvement are requested.</t></abstract>
</front>
<seriesInfo name='RFC' value='2295'/>
<seriesInfo name='DOI' value='10.17487/RFC2295'/>
</reference>




    </references>


<section anchor="backports" title="Variants and Defined Content Negotiation Mechanisms">

<t>This appendix defines the required information to use existing proactive content negotiation mechanisms (as defined in <xref target="RFC7231"/>, Section 5.3) with the <spanx style="verb">Variants</spanx> header field.</t>

<section anchor="content-encoding" title="Content-Encoding">

<t>When negotiating for the <spanx style="verb">Content-Encoding</spanx> response header field’s value, the applicable request header field is <spanx style="verb">Accept-Encoding</spanx>, as per <xref target="RFC7231"/> Section 5.3.4.</t>

<t>To perform content negotiation for Content-Encoding given an <spanx style="verb">incoming-request</spanx>, <spanx style="verb">stored-responses</spanx> and <spanx style="verb">available-values</spanx>:</t>

<t><list style="numbers">
  <t>Let <spanx style="verb">preferred-codings</spanx> be a list of the <spanx style="verb">coding</spanx>s in the “Accept-Encoding” header field of <spanx style="verb">incoming-request</spanx>, ordered by their <spanx style="verb">weight</spanx>, highest to lowest. If “Accept-Encoding” is not present or empty, <spanx style="verb">preferred-codings</spanx> will be empty.</t>
  <t>If <spanx style="verb">identity</spanx> is not a member of <spanx style="verb">preferred-codings</spanx>, append <spanx style="verb">identity</spanx> to <spanx style="verb">preferred-codings</spanx> with a <spanx style="verb">weight</spanx> of 0.001.</t>
  <t>Remove any member of <spanx style="verb">preferred-codings</spanx> whose <spanx style="verb">weight</spanx> is 0.</t>
  <t>Append “identity” to <spanx style="verb">available-values</spanx>.</t>
  <t>Remove any member of <spanx style="verb">available-values</spanx> not present in <spanx style="verb">preferred-codings</spanx>, comparing in a case-insensitive fashion.</t>
  <t>Let <spanx style="verb">filtered-responses</spanx> be an empty list.</t>
  <t>For each <spanx style="verb">available-value</spanx> of <spanx style="verb">available-values</spanx>:
  <list style="numbers">
      <t>If there is a member of <spanx style="verb">stored-responses</spanx> whose “Content-Encoding” field-value has <spanx style="verb">content-coding</spanx>s (<xref target="RFC7231"/>, Section 3.1.2.2) that all match members of <spanx style="verb">available-value</spanx> in a case-insensitive fashion, append that stored response to <spanx style="verb">filtered-responses</spanx>.</t>
    </list></t>
  <t>If there is a member of <spanx style="verb">stored-responses</spanx> that does not have a “Content-Encoding” header field, append that stored response to <spanx style="verb">filtered-responses</spanx>.</t>
  <t>Return <spanx style="verb">filtered-responses</spanx>.</t>
</list></t>

<t>This algorithm selects the stored response(s) in order of preference by the client; if none are stored in cache, the request will be forwarded towards the origin. It defaults to the “identity” non-encoding.</t>

<t>Implementations MAY remove members of <spanx style="verb">filtered-responses</spanx> based upon their <spanx style="verb">weight</spanx> or other criteria before returning. For example, they might wish to return an empty list when the client’s most-preferred available response is not stored, so as to populate the cache as well as honour the client’s preferences.</t>

</section>
<section anchor="content-language" title="Content-Language">

<t>When negotiating for the <spanx style="verb">Content-Language</spanx> response header field’s value, the applicable request header field is <spanx style="verb">Accept-Language</spanx>, as per <xref target="RFC7231"/> Section 5.3.5.</t>

<t>To perform content negotiation for Content-Language given an <spanx style="verb">incoming-request</spanx>, <spanx style="verb">stored-responses</spanx> and <spanx style="verb">available-values</spanx>:</t>

<t><list style="numbers">
  <t>Let <spanx style="verb">preferred-langs</spanx> be a list of the <spanx style="verb">language-range</spanx>s in the “Accept-Language” header field (<xref target="RFC7231"/>, Section 5.3.5) of <spanx style="verb">incoming-request</spanx>, ordered by their <spanx style="verb">weight</spanx>, highest to lowest.</t>
  <t>If <spanx style="verb">preferred-langs</spanx> is empty, append “*” with a <spanx style="verb">weight</spanx> of 0.001.</t>
  <t>Remove any member of <spanx style="verb">preferred-langs</spanx> whose <spanx style="verb">weight</spanx> is 0.</t>
  <t>Filter <spanx style="verb">available-values</spanx> using <spanx style="verb">preferred-langs</spanx> with either the Basic Filtering scheme defined in <xref target="RFC4647"/> Section 3.3.1, or the Lookup scheme defined in Section 3.4 of that document. Use the first member of <spanx style="verb">available-values</spanx> as the default.</t>
  <t>Let <spanx style="verb">filtered-responses</spanx> be an empty list.</t>
  <t>For each <spanx style="verb">available-value</spanx> of <spanx style="verb">available-values</spanx>:
  <list style="numbers">
      <t>If there is a member of <spanx style="verb">stored-responses</spanx> whose “Content-Language” field-value has a <spanx style="verb">language-tag</spanx> (<xref target="RFC7231"/>, Section 3.1.3.2) that matches <spanx style="verb">available-value</spanx> in a case-insensitive fashion, append that stored response to <spanx style="verb">filtered-responses</spanx>.</t>
    </list></t>
  <t>Return <spanx style="verb">filtered-responses</spanx>.</t>
</list></t>

<t>This algorithm selects the available response(s) (according to <spanx style="verb">Variants</spanx>) in order of preference by the client; if none are stored in cache, the request will be forwarded towards the origin. If no preferred language can be selected, the first <spanx style="verb">available-value</spanx> will be used as the default.</t>

<t>Implementations MAY remove members of <spanx style="verb">filtered-responses</spanx> based upon their <spanx style="verb">weight</spanx> or other criteria before returning. For example, they might wish to return an empty list when the client’s most-preferred available response is not stored, so as to populate the cache as well as honour the client’s preferences.</t>

</section>
</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

