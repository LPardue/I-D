



Network Working Group                                      M. Nottingham
Internet-Draft                                             July 20, 2016
Intended status: Informational
Expires: January 21, 2017


                         Site-Wide HTTP Headers
                 draft-nottingham-site-wide-headers-00

Abstract

   This document specifies a mechanism for Web sites to send HTTP header
   fields that apply to the entire origin via a different, more
   efficient mechanism, rather than including them in every response.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on January 21, 2017.

Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





Nottingham              Expires January 21, 2017                [Page 1]

Internet-Draft           Site-Wide HTTP Headers                July 2016


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Notational Conventions  . . . . . . . . . . . . . . . . .   3
   2.  Site-Wide HTTP Headers  . . . . . . . . . . . . . . . . . . .   3
     2.1.  The "text/http-headers" Media Type  . . . . . . . . . . .   5
     2.2.  The "site-metadata" well-known URI  . . . . . . . . . . .   5
     2.3.  The "SM" HTTP Request Header Field  . . . . . . . . . . .   6
   3.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   6
   4.  Security Considerations . . . . . . . . . . . . . . . . . . .   6
     4.1.  Combining Headers . . . . . . . . . . . . . . . . . . . .   6
   5.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   6
     5.1.  Normative References  . . . . . . . . . . . . . . . . . .   6
     5.2.  Informative References  . . . . . . . . . . . . . . . . .   7
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   7

1.  Introduction

   A variety of metadata about Web sites is being conveyed in new HTTP
   response headers.  In particular, it is becoming more common for
   metadata that applies to an entire Web site to be conveyed in a
   header field that is included on every response for that site.

   For example, "Strict-Transport-Security" [RFC6797] and "Public-Key-
   Pins" [RFC7469] both define headers that are explicitly scoped to an
   entire origin [RFC6454], and number of similar headers are under
   consideration.

   Likewise, some HTTP header fields only sensibly have a single value
   per origin; for example, "Server".

   Furthermore, some headers are resource-specific, but in some
   deployments, are uniform across an origin.  For example, some sites
   will have a "CSP" [W3C.CR-CSP2-20150721] header that doesn't vary
   across the site.

   This is inefficient.  Besides the obvious bandwidth waste due to
   redundancy in HTTP/1, it also impacts HTTP/2's HPACK [RFC7541] header
   compression; since the amount of space of available for state is
   limited (by default, 4K), verbose, repeating headers can greatly
   reduce the effectiveness of HPACK.

   However, when the metadata affects processing of the response, and
   the application is latency-sensitive (as uses of HTTP so often are),
   it's not pratical to separate the metadata from the response; it
   needs to be sent on every response so that it is available.





Nottingham              Expires January 21, 2017                [Page 2]

Internet-Draft           Site-Wide HTTP Headers                July 2016


   One way to mitigate this problem is to remove these site-wide header
   fields from responses, and keep them in a separate resource.  When
   clients have fetched that resource and guarantee that they will
   consider its contents to be included in all responses for that
   domain, they can indicate this to the server with a small request
   header; when servers see it, they can safely omit those headers in
   responses.

   In this manner, such headers are sent on responses until they are
   loaded from a separate resource; once the client indicates it has
   done so, they can be omitted from responses, reducing network and
   compression context usage.

   This document specifies how to do this by using a well-known URI
   [RFC5785] to store these headers in a format specified in
   Section 2.1.  In typical use, a server can use HTTP/2 Server Push
   ([RFC7540], Section 8.2) to proactively send this content upon the
   first request from the client.  Then, it can add the headers therein
   to responses when the corresponding requests do not contain the "SM"
   header field.

1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

2.  Site-Wide HTTP Headers

   When a server wishes to use site-wide HTTP headers, it places a file
   in the "text/http-headers" format (Section 2.1) at the "site-headers"
   well-known URI (Section 2.2).

   Then, when requests have a "SM" request header field Section 2.3, the
   header field values within are omitted from the corresponding
   responses.  Typically, this can be implemented by appending the
   headers contained therein when the request doesn't contain the SM
   header field.

   Servers SHOULD include "SM" in the field-value of the Vary response
   header field when the response is cacheable (as per [RFC7234]).

   For example, if a request to the well-known URI returns:








Nottingham              Expires January 21, 2017                [Page 3]

Internet-Draft           Site-Wide HTTP Headers                July 2016


   HTTP/1.1 200 OK
   Content-Type: text/http-headers
   Cache-Control: max-age=3600
   Content-Length: 334

   Strict-Transport-Security: max-age=15768000 ; includeSubDomains
   Server: Apache/2.4.7 (Ubuntu)
   Public-Key-Pins: max-age=604800;
     pin-sha256="ZitlqPmA9wodcxkwOW/c7ehlNFk8qJ9FsocodG6GzdjNM=";
     pin-sha256="XRXP987nz4rd1/gS2fJSNVfyrZbqa00T7PeRXUPd15w=";
     report-uri="/lib/key-pin.cgi"
   Cache-Control: max-age=3600
   Vary: Accept-Encoding

   and a client that has loaded that resource makes the request:

   GET /images/foo.jpg HTTP/1.1
   Host: www.example.com
   SM: 1

   this indicates that the client has processed the site-metatadata
   resource, and therefore that the server can omit the response header
   fields contained within it on the wire:

   HTTP/1.1 200 OK
   Content-Type: image/jpeg
   Vary: SM
   Transfer-Encoding: chunked

   Upon receipt of that response, the client will consider it equivalent
   to:

   HTTP/1.1 200 OK
   Content-Type: image/jpeg
   Vary: SM
   Connection: close
   Strict-Transport-Security: max-age=15768000 ; includeSubDomains
   Server: Apache/2.4.7 (Ubuntu)
   Public-Key-Pins: max-age=604800;
     pin-sha256="ZitlqPmA9wodcxkwOW/c7ehlNFk8qJ9FsocodG6GzdjNM=";
     pin-sha256="XRXP987nz4rd1/gS2fJSNVfyrZbqa00T7PeRXUPd15w=";
     report-uri="/lib/key-pin.cgi"
   Cache-Control: max-age=3600
   Vary: Accept-Encoding

   If a request omits the "SM" header field, all of the header fields
   above will be sent by the server in the response.




Nottingham              Expires January 21, 2017                [Page 4]

Internet-Draft           Site-Wide HTTP Headers                July 2016


   Note that in these examples, the "Vary" header field has two values.
   Because the field values in the well-known resource are appended to
   the header set occurring on the wire, clients will combine them as
   per the rules in [RFC7230], Section 3.2.2.

2.1.  The "text/http-headers" Media Type

   The text/http-headers media type is used to indicate that a file
   contains a set of HTTP header fields, as defined in [RFC7230],
   Section 3; i.e.,

   OWS *( header-field CRLF ) OWS

   Whitespace at the beginning and end of the file MUST be stripped.  As
   in HTTP itself, implementations need to be forgiving about line
   endings; specifically, bare CR MUST be considered to be a line
   ending.

   For example:

   Strict-Transport-Security: max-age=15768000 ; includeSubDomains
   Server: Apache/2.4.7 (Ubuntu)
   Public-Key-Pins: max-age=604800;
     pin-sha256="ZitlqPmA9wodcxkwOW/c7ehlNFk8qJ9FsocodG6GzdjNM=";
     pin-sha256="XRXP987nz4rd1/gS2fJSNVfyrZbqa00T7PeRXUPd15w=";
     report-uri="/lib/key-pin.cgi"
   Cache-Control: max-age=3600
   Vary: Accept-Encoding

2.2.  The "site-metadata" well-known URI

   The well-known URI [RFC5785] "site-metadata" is a resource that, when
   fetched, returns a file in the "text/http-headers" Section 2.1
   format.

   Its media type SHOULD be generated as "text/http-headers", although
   clients SHOULD NOT reject responses with other types (particularly,
   "application/octet-stream" and "text/plain").

   Clients SHOULD consider it to be valid for its freshness lifetime (as
   per [RFC7234]).  If it does not have an explicit freshness lifetime,
   they SHOULD consider it to have a heuristic freshness lifetime of 60
   seconds.








Nottingham              Expires January 21, 2017                [Page 5]

Internet-Draft           Site-Wide HTTP Headers                July 2016


2.3.  The "SM" HTTP Request Header Field

   The "SM" HTTP request header field indicates that the client has a
   fresh (as per [RFC7234]) copy of the "site-metadata" URI Section 2.2
   for the request's origin ([RFC6454]), and will consider the
   corresponding response to contain the header field(s) contained
   within.

   Clients MUST generate its field value as "1".

   For example:

   SM: 1

   Servers MUST consider it to be present when the field name "SM" is
   present in the set of request header fields; i.e., the value is not
   relevant.

3.  IANA Considerations

   TBD

4.  Security Considerations

4.1.  Combining Headers

5.  References

5.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, DOI 10.17487/
              RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

   [RFC5785]  Nottingham, M. and E. Hammer-Lahav, "Defining Well-Known
              Uniform Resource Identifiers (URIs)", RFC 5785, DOI
              10.17487/RFC5785, April 2010,
              <http://www.rfc-editor.org/info/rfc5785>.

   [RFC6454]  Barth, A., "The Web Origin Concept", RFC 6454, DOI
              10.17487/RFC6454, December 2011,
              <http://www.rfc-editor.org/info/rfc6454>.

   [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., "Hypertext Transfer
              Protocol (HTTP/1.1): Message Syntax and Routing", RFC
              7230, DOI 10.17487/RFC7230, June 2014,
              <http://www.rfc-editor.org/info/rfc7230>.



Nottingham              Expires January 21, 2017                [Page 6]

Internet-Draft           Site-Wide HTTP Headers                July 2016


   [RFC7234]  Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
              Ed., "Hypertext Transfer Protocol (HTTP/1.1): Caching",
              RFC 7234, DOI 10.17487/RFC7234, June 2014,
              <http://www.rfc-editor.org/info/rfc7234>.

   [RFC7540]  Belshe, M., Peon, R., and M. Thomson, Ed., "Hypertext
              Transfer Protocol Version 2 (HTTP/2)", RFC 7540, DOI
              10.17487/RFC7540, May 2015,
              <http://www.rfc-editor.org/info/rfc7540>.

5.2.  Informative References

   [RFC6797]  Hodges, J., Jackson, C., and A. Barth, "HTTP Strict
              Transport Security (HSTS)", RFC 6797, DOI 10.17487/
              RFC6797, November 2012,
              <http://www.rfc-editor.org/info/rfc6797>.

   [RFC7469]  Evans, C., Palmer, C., and R. Sleevi, "Public Key Pinning
              Extension for HTTP", RFC 7469, DOI 10.17487/RFC7469, April
              2015, <http://www.rfc-editor.org/info/rfc7469>.

   [RFC7541]  Peon, R. and H. Ruellan, "HPACK: Header Compression for
              HTTP/2", RFC 7541, DOI 10.17487/RFC7541, May 2015,
              <http://www.rfc-editor.org/info/rfc7541>.

   [W3C.CR-CSP2-20150721]
              West, M., Barth, A., and D. Veditz, "Content Security
              Policy Level 2", World Wide Web Consortium CR CR-
              CSP2-20150721, July 2015,
              <http://www.w3.org/TR/2015/CR-CSP2-20150721>.

Author's Address

   Mark Nottingham

   Email: mnot@mnot.net
   URI:   http://www.mnot.net/














Nottingham              Expires January 21, 2017                [Page 7]
