<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.0.39 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfc2629xslt/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-nottingham-json-home-05" category="info">

  <front>
    <title>Home Documents for HTTP APIs</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2016"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a “home document” format for non-browser HTTP clients.</t>



    </abstract>


    <note title="Note to Readers">


<t>The issues list for this draft can be found at <eref target="https://github.com/mnot/I-D/labels/json-home">https://github.com/mnot/I-D/labels/json-home</eref>.</t>

<t>The most recent (often, unpublished) draft is at <eref target="https://mnot.github.io/I-D/json-home/">https://mnot.github.io/I-D/json-home/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/mnot/I-D/commits/gh-pages/json-home">https://github.com/mnot/I-D/commits/gh-pages/json-home</eref>.</t>

<t>For information about implementations, see <eref target="https://github.com/mnot/I-D/wiki/json-home">https://github.com/mnot/I-D/wiki/json-home</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>It is becoming increasingly common to use HTTP <xref target="RFC7230"/> for applications other than traditional
Web browsing. Such “HTTP APIs” are used to integrate processes on disparate systems, make
information available to machines across the Internet, and as part of the implementation of
“micro-services.”</t>

<t>By using HTTP, these applications realise a number of benefits, from message framing to caching,
and well-defined semantics that are broadly understood and useful.</t>

<t>However, one of the core architectural tenants of the Web is the use of links <xref target="RFC3986"/> to
navigate between states; typically, these applications document static URLs that clients need to
know and servers need to implement, and any interaction outside of these bounds is uncharted
territory.</t>

<t>In contrast, a link-driven application discovers relevant resources at run time, using a shared
vocabulary of link relations <xref target="RFC5988"/> and internet media types <xref target="RFC6838"/> to support a “follow
your nose” style of interaction.</t>

<t>A client can then decide which resources to interact with “on the fly” based upon its
capabilities (as described by link relations), and the server can safely add new resources and
formats without disturbing clients that are not yet aware of them.</t>

<t>Doing so can provide any of a number of benefits, including:</t>

<t><list style="symbols">
  <t>Extensibility - Because new server capabilities can be expressed as link relations, new features can be layered in without introducing a new API version; clients will discover them in the home document. This promotes loose coupling between clients and servers.</t>
  <t>Evolvability - Likewise, interfaces can change gradually by introducing a new link relation and/or format while still supporting the old ones.</t>
  <t>Customisation - Home documents can be tailored for the client, allowing diffrent classes of service or different client permissions to be exposed naturally.</t>
  <t>Flexible deployment - Since URLs aren’t baked into documentation, the server can choose what URLs to use for a given service.</t>
  <t>API mixing - Likewise, more than one API can be deployed on a given server, without fear of collisions.</t>
</list></t>

<t>Whether an application ought to use links in this fashion depends on how it is deployed; generally,
the most benefit will be received when multiple instances of the service are deployed, possibly
with different versions, and they are consumed by clients with different capabilities. In
particular, Internet Standards that use HTTP as a substrate are likely to require the attributes
described above.</t>

<t>Clients need to be able to discover information about these applications to use it efficiently;
just as with a human-targeted “home page” for a site, there is a need for a “home document” for a
HTTP API that describes it to non-browser clients.</t>

<t>Of course, an HTTP API might use any format to do so; however, there are advantages to having a
common home document format. This specification defines one, using the JSON format <xref target="RFC7159"/>.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as described in
<xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="api-home-documents" title="API Home Documents">

<t>An API Home Document (or, interchangeably, “home document”) uses the format described in <xref target="RFC7159"/>
and has the media type “application/json-home”.</t>

<t>Its content consists of a root object with:</t>

<t><list style="symbols">
  <t>A “resources” member, whose value is an object that describes the resources associated with the
API. Its member names are link relation types (as defined by <xref target="RFC5988"/>), and their values are
Resource Objects (<xref target="resource-object"/>).</t>
  <t>Optionally, a “api” member, whose value is an API Object (<xref target="api-object"/>) that contains
information about the API as a whole.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
  GET / HTTP/1.1
  Host: example.org
  Accept: application/json-home

  HTTP/1.1 200 OK
  Content-Type: application/json-home
  Cache-Control: max-age=3600
  Connection: close

  {
    "api": {
      "title": "Example API",
      "links": {
        "author": "mailto:api-admin@example.com",
        "describedBy": "https://example.com/api-docs/"
      }
    }
    "resources": {
      "tag:me@example.com,2016:widgets": {
        "href": "/widgets/"
      },
      "tag:me@example.com,2016:widget": {
        "hrefTemplate": "/widgets/{widget_id}",
        "hrefVars": {
          "widget_id": "https://example.org/param/widget"
        },
        "hints": {
          "allow": ["GET", "PUT", "DELETE", "PATCH"],
          "formats": {
            "application/json": {}
          },
          "acceptPatch": ["application/json-patch+json"],
          "acceptRanges": ["bytes"]
        }
      }
    }
  }
]]></artwork></figure>

<t>Here, we have a home document for the API “Example API”, whose author can be contacted at the
e-mail address “api-admin@example.com”, and whose documentation is at
“https://example.com/api-docs/”.</t>

<t>It links to a resource “/widgets/” with the relation “tag:me@example.com,2016:widgets”. It also
links to an unknown number of resources with the relation type “tag:me@example.com,2016:widget”
using a URI Template <xref target="RFC6570"/>, along with a mapping of identifiers to a variable for use in that
template.</t>

<t>It also gives several hints about interacting with the latter “widget” resources, including the
HTTP methods usable with them, the PATCH and POST formats they accept, and the fact that they
support partial requests <xref target="RFC7233"/> using the “bytes” range-specifier.</t>

<t>It gives no such hints about the “widgets” resource. This does not mean that it (for example)
doesn’t support any HTTP methods; it means that the client will need to discover this by
interacting with the resource, and/or examining the documentation for its link relation type.</t>

<t>Effectively, this names a set of behaviors, as described by a resource object, with a link relation
type. This means that several link relations might apply to a common base URL; e.g.:</t>

<figure><artwork><![CDATA[
{
  "resources": {
    "tag:me@example.com,2016:search-by-id": {
      "hrefTemplate": "/search?id={widget_id}",
      "hrefVars": {
        "widget_id": "https://example.org/param/widget_id"
      }
    },
    "tag:me@example.com,2016:search-by-name": {
      "hrefTemplate": "/search?name={widget_name}",
      "hrefVars": {
        "widget_name": "https://example.org/param/widget_name"
      }
    }
  }
}
]]></artwork></figure>

<t>Note that the examples above use both tag <xref target="RFC4151"/> and https <xref target="RFC7230"/> URIs; any URI scheme can be used to identify link relations and other artefacts in home documents.</t>

</section>
<section anchor="api-object" title="API Objects">

<t>An API Object contains links to information about the API itself.</t>

<t>Two members are defined:</t>

<t><list style="symbols">
  <t>“title” has a string value indicating the name of the API;</t>
  <t>“links” has an object value, whose member names are link relation types <xref target="RFC5988"/>, and values
are URLs <xref target="RFC3986"/>. The context of these links is the API home document as a whole.</t>
</list></t>

<t>Future members MAY be defined by specifications that update this document.</t>

</section>
<section anchor="resource-object" title="Resource Objects">

<t>A Resource Object links to resources of the defined type using one of two mechanisms; either a
direct link (in which case there is exactly one resource of that relation type associated with the
API), or a templated link, in which case there are zero to many such resources.</t>

<t>Direct links are indicated with an “href” property, whose value is a URI <xref target="RFC3986"/>.</t>

<t>Templated links are indicated with an “hrefTemplate” property, whose value is a URI Template
<xref target="RFC6570"/>. When “hrefTemplate” is present, the Resource Object MUST have a “hrefVars” property;
see “Resolving Templated Links”.</t>

<t>Resource Objects MUST have exactly one of the “href” and “href-vars” properties.</t>

<t>In both forms, the links that “href” and “hrefTemplate” refer to are URI-references <xref target="RFC3986"/>
whose base URI is that of the API Home Document itself.</t>

<t>Resource Objects MAY also have a “hints” property, whose value is an object that uses named
Resource Hints (see <xref target="resource_hints"/>) as its properties.</t>

<section anchor="resolving-templated-links" title="Resolving Templated Links">

<t>A URI can be derived from a Templated Link by treating the “hrefTemplate” value as a Level 3 URI
Template <xref target="RFC6570"/>, using the “hrefVars” property to fill the template.</t>

<t>The “hrefVars” property, in turn, is an object that acts as a mapping between variable names
available to the template and absolute URIs that are used as global identifiers for the semantics
and syntax of those variables.</t>

<t>For example, given the following Resource Object:</t>

<figure><artwork><![CDATA[
  "https://example.org/rel/widget": {
    "hrefTemplate": "/widgets/{widget_id}",
    "hrefVars": {
      "widget_id": "https://example.org/param/widget"
    },
    "hints": {
      "allow": ["GET", "PUT", "DELETE", "PATCH"],
      "formats": {
        "application/json": {}
      },
      "acceptPatch": ["application/json-patch+json"],
      "acceptRanges": ["bytes"]
    }
  }
]]></artwork></figure>

<t>If you understand that “https://example.org/param/widget” is an numeric identifier for a widget, you
can then find the resource corresponding to widget number 12345 at
“https://example.org/widgets/12345” (assuming that the Home Document is located at
“https://example.org/”).</t>

</section>
</section>
<section anchor="resource_hints" title="Resource Hints">

<t>Resource hints allow clients to find relevant information about interacting with a resource
beforehand, as a means of optimizing communications, as well as advertising available behaviors
(e.g., to aid in laying out a user interface for consuming the API).</t>

<t>Hints are just that – they are not a “contract”, and are to only be taken as advisory. The runtime
behavior of the resource always overrides hinted information.</t>

<t>For example, a resource might hint that the PUT method is allowed on all “widget” resources. This
means that generally, the user has the ability to PUT to a particular resource, but a specific
resource might reject a PUT based upon access control or other considerations. More fine-grained
information might be gathered by interacting with the resource (e.g., via a GET), or by another
resource “containing” it (such as a “widgets” collection) or describing it (e.g., one linked to it
with a “describedBy” link relation).</t>

<t>This specification defines a set of common hints, based upon information that’s discoverable by
directly interacting with resources. See <xref target="resource_hint_registry"/> for information on defining new
hints.</t>

<section anchor="allow" title="allow">

<t><list style="symbols">
  <t>Resource Hint Name: allow</t>
  <t>Description: Hints the HTTP methods that the current client will be able to use to interact with
the resource; equivalent to the Allow HTTP response header.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing HTTP methods.</t>

</section>
<section anchor="formats" title="formats">

<t><list style="symbols">
  <t>Resource Hint Name: formats</t>
  <t>Description: Hints the representation types that the resource produces and consumes, using the
GET and PUT methods respectively, subject to the ‘allow’ hint.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an object, whose keys are media types, and values are objects
containing Representation Hints (see <xref target="representation_hints"/>).</t>

</section>
<section anchor="acceptpatch" title="acceptPatch">

<t><list style="symbols">
  <t>Resource Hint Name: accept-Patch</t>
  <t>Description: Hints the PATCH <xref target="RFC5789"/> request formats accepted by the resource for this
client; equivalent to the Accept-Patch HTTP response header.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing media types.</t>

<t>When this hint is present, “PATCH” SHOULD be listed in the “allow” hint.</t>

</section>
<section anchor="acceptpost" title="acceptPost">

<t><list style="symbols">
  <t>Resource Hint Name: acceptPost</t>
  <t>Description: Hints the POST request formats accepted by the resource for this client.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing media types.</t>

<t>When this hint is present, “POST” SHOULD be listed in the “allow” hint.</t>

</section>
<section anchor="acceptranges" title="acceptRanges">

<t><list style="symbols">
  <t>Resource Hint Name: acceptRanges</t>
  <t>Description: Hints the range-specifiers available to the client for this resource; equivalent to
the Accept-Ranges HTTP response header <xref target="RFC7233"/>.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing HTTP range-specifiers (typically, “bytes”).</t>

</section>
<section anchor="acceptprefer" title="acceptPrefer">

<t><list style="symbols">
  <t>Resource Hint Name: acceptPrefer</t>
  <t>Description: Hints the preferences <xref target="RFC7240"/> supported by the resource. Note that, as per that
specifications, a preference can be ignored by the server.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing preferences.</t>

</section>
<section anchor="docs" title="docs">

<t><list style="symbols">
  <t>Resource Hint Name: docs</t>
  <t>Description: Hints the location for human-readable documentation for the relation type of the
resource.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be a string containing an absolute-URI <xref target="RFC3986"/> referring to documentation that
SHOULD be in HTML format.</t>

</section>
<section anchor="preconditionrequired" title="preconditionRequired">

<t><list style="symbols">
  <t>Resource Hint Name: preconditionRequired</t>
  <t>Description: Hints that the resource requires state-changing requests (e.g., PUT, PATCH) to
include a precondition, as per <xref target="RFC7232"/>, to avoid conflicts due to concurrent updates.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, with possible values “etag” and “last-modified” indicating
type of precondition expected.</t>

</section>
<section anchor="authschemes" title="authSchemes">

<t><list style="symbols">
  <t>Resource Hint Name: authSchemes</t>
  <t>Description: Hints that the resource requires authentication using the HTTP Authentication
Framework <xref target="RFC7235"/>.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of objects, each with a “scheme” property containing a string that
corresponds to a HTTP authentication scheme, and optionally a “realms” property containing an array
of zero to many strings that identify protection spaces that the resource is a member of.</t>

<t>For example, a Resource Object might contain the following hint:</t>

<figure><artwork><![CDATA[
  {
    "authSchemes": [
      {
        "scheme": "Basic",
        "realms": ["private"]
      }
    ]
  }
]]></artwork></figure>

</section>
<section anchor="status" title="status">

<t><list style="symbols">
  <t>Resource Hint Name: status</t>
  <t>Description: Hints the status of the resource.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be a string; possible values are:</t>

<t><list style="symbols">
  <t>“deprecated” - indicates that use of the resource is not recommended, but it is still available.</t>
  <t>“gone” - indicates that the resource is no longer available; i.e., it will return a 404 (Not
Found) or 410 (Gone) HTTP status code if accessed.</t>
</list></t>

</section>
</section>
<section anchor="representation_hints" title="Representation Hints">

<t>TBD</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when using hints. For example, a naive client might send credentials
to a server that uses the auth-req hint, without checking to see if those credentials are
appropriate for that server.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="resource_hint_registry" title="HTTP Resource Hint Registry">

<t>This specification defines the HTTP Resource Hint Registry. See <xref target="resource_hints"/> for a general
description of the function of resource hints.</t>

<t>In particular, resource hints are generic; that is, they are potentially applicable to any
resource, not specific to one application of HTTP, nor to one particular format. Generally, they
ought to be information that would otherwise be discoverable by interacting with the resource.</t>

<t>Hint names MUST be composed of the lowercase letters (a-z), digits (0-9), underscores (“_”) and
hyphens (“-“), and MUST begin with a lowercase letter.</t>

<t>Hint content SHOULD be described in terms of JSON <xref target="RFC7159"/> constructs.</t>

<t>New hints are registered using the Expert Review process described in <xref target="RFC5226"/> to enforce the
criteria above. Requests for registration of new resource hints are to use the following template:</t>

<t><list style="symbols">
  <t>Resource Hint Name: [hint name]</t>
  <t>Description: [a short description of the hint’s semantics]</t>
  <t>Specification: [reference to specification document]</t>
</list></t>

<t>Initial registrations are enumerated in <xref target="resource_hints"/>.</t>

</section>
<section anchor="representation_hint_registry" title="HTTP Representation Hint Registry">

<t>TBD</t>

</section>
<section anchor="media-type-registration" title="Media Type Registration">

<t>TBD</t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor='RFC2119' target='http://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor='RFC3986' target='http://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor='RFC5226' target='http://www.rfc-editor.org/info/rfc5226'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'><organization /></author>
<date year='2008' month='May' />
<abstract><t>Many protocols make use of identifiers consisting of constants and other well-known values.  Even after a protocol has been defined and deployment has begun, new values may need to be assigned (e.g., for a new option type in DHCP, or a new encryption or authentication transform for IPsec).  To ensure that such quantities have consistent values and interpretations across all implementations, their assignment must be administered by a central authority.  For IETF protocols, that role is provided by the Internet Assigned Numbers Authority (IANA).</t><t>In order for IANA to manage a given namespace prudently, it needs guidelines describing the conditions under which new values can be assigned or when modifications to existing values can be made.  If IANA is expected to play a role in the management of a namespace, IANA must be given clear and concise instructions describing that role.  This document discusses issues that should be considered in formulating a policy for assigning values to a namespace and provides guidelines for authors on the specific text that must be included in documents that place demands on IANA.</t><t>This document obsoletes RFC 2434.  This document specifies an Internet Best  Current Practices for the Internet Community, and requests discussion and  suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='26'/>
<seriesInfo name='RFC' value='5226'/>
<seriesInfo name='DOI' value='10.17487/RFC5226'/>
</reference>



<reference  anchor='RFC5988' target='http://www.rfc-editor.org/info/rfc5988'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2010' month='October' />
<abstract><t>This document specifies relation types for Web links, and defines a registry for them.  It also defines the use of such links in HTTP headers with the Link header field.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5988'/>
<seriesInfo name='DOI' value='10.17487/RFC5988'/>
</reference>



<reference  anchor='RFC6570' target='http://www.rfc-editor.org/info/rfc6570'>
<front>
<title>URI Template</title>
<author initials='J.' surname='Gregorio' fullname='J. Gregorio'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='M.' surname='Hadley' fullname='M. Hadley'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='D.' surname='Orchard' fullname='D. Orchard'><organization /></author>
<date year='2012' month='March' />
<abstract><t>A URI Template is a compact sequence of characters for describing a range of Uniform Resource Identifiers through variable expansion. This specification defines the URI Template syntax and the process for expanding a URI Template into a URI reference, along with guidelines for the use of URI Templates on the Internet.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6570'/>
<seriesInfo name='DOI' value='10.17487/RFC6570'/>
</reference>



<reference  anchor='RFC7159' target='http://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2014' month='March' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>



<reference  anchor='RFC7234' target='http://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor='RFC5789' target='http://www.rfc-editor.org/info/rfc5789'>
<front>
<title>PATCH Method for HTTP</title>
<author initials='L.' surname='Dusseault' fullname='L. Dusseault'><organization /></author>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2010' month='March' />
<abstract><t>Several applications extending the Hypertext Transfer Protocol (HTTP) require a feature to do partial resource modification.  The existing HTTP PUT method only allows a complete replacement of a document. This proposal adds a new HTTP method, PATCH, to modify an existing HTTP resource.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5789'/>
<seriesInfo name='DOI' value='10.17487/RFC5789'/>
</reference>



<reference  anchor='RFC6838' target='http://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor='RFC7232' target='http://www.rfc-editor.org/info/rfc7232'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP/1.1 conditional requests, including metadata header fields for indicating state changes, request header fields for making preconditions on such state, and rules for constructing the responses to a conditional request when one or more preconditions evaluate to false.</t></abstract>
</front>
<seriesInfo name='RFC' value='7232'/>
<seriesInfo name='DOI' value='10.17487/RFC7232'/>
</reference>



<reference  anchor='RFC7233' target='http://www.rfc-editor.org/info/rfc7233'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Range Requests</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='Y.' surname='Lafon' fullname='Y. Lafon' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines range requests and the rules for constructing and combining responses to those requests.</t></abstract>
</front>
<seriesInfo name='RFC' value='7233'/>
<seriesInfo name='DOI' value='10.17487/RFC7233'/>
</reference>



<reference  anchor='RFC7235' target='http://www.rfc-editor.org/info/rfc7235'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='7235'/>
<seriesInfo name='DOI' value='10.17487/RFC7235'/>
</reference>



<reference  anchor='RFC7240' target='http://www.rfc-editor.org/info/rfc7240'>
<front>
<title>Prefer Header for HTTP</title>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2014' month='June' />
<abstract><t>This specification defines an HTTP header field that can be used by a client to request that certain behaviors be employed by a server while processing a request.</t></abstract>
</front>
<seriesInfo name='RFC' value='7240'/>
<seriesInfo name='DOI' value='10.17487/RFC7240'/>
</reference>



<reference  anchor='RFC4151' target='http://www.rfc-editor.org/info/rfc4151'>
<front>
<title>The 'tag' URI Scheme</title>
<author initials='T.' surname='Kindberg' fullname='T. Kindberg'><organization /></author>
<author initials='S.' surname='Hawke' fullname='S. Hawke'><organization /></author>
<date year='2005' month='October' />
<abstract><t>This document describes the &quot;tag&quot; Uniform Resource Identifier (URI) scheme.  Tag URIs (also known as &quot;tags&quot;) are designed to be unique across space and time while being tractable to humans.  They are distinct from most other URIs in that they have no authoritative resolution mechanism.  A tag may be used purely as an entity identifier.  Furthermore, using tags has some advantages over the common practice of using &quot;http&quot; URIs as identifiers for non-HTTP-accessible resources.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4151'/>
<seriesInfo name='DOI' value='10.17487/RFC4151'/>
</reference>



<reference  anchor='RFC7230' target='http://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to Jan Algermissen, Mike Amundsen, Bill Burke, Sven Dietze, Graham Klyne, Leif Hedstrom,
Joe Hildebrand, Jeni Tennison, Erik Wilde and Jorge Williams for their suggestions and feedback.</t>

</section>
<section anchor="considerations-for-creating-and-serving-home-documents" title="Considerations for Creating and Serving Home Documents">

<t>When making an API home document available, there are a few things to keep in mind:</t>

<t><list style="symbols">
  <t>A home document is best located at a memorable URI, because its URI will effectively become the
URI for the API itself to clients.</t>
  <t>Home documents can be personalized, just as “normal” home pages can. For example, you might
advertise different URIs, and/or different kinds of link relations, depending on the client’s
identity.</t>
  <t>Home documents ought to be assigned a freshness lifetime (e.g., “Cache-Control: max-age=3600”) so
that clients can cache them, to avoid having to fetch it every time the client interacts with the
service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to documentation for
those constructs.</t>
</list></t>

<section anchor="managing-change-in-home-documents" title="Managing Change in Home Documents">

<t>The URIs used in API home documents MAY change over time. However, changing them can cause issues
for clients that are relying on cached home documents containing old links.</t>

<t>To mitigate the impact of such changes, servers ought to consider:</t>

<t><list style="symbols">
  <t>Reducing the freshness lifetime of home documents before a link change, so that clients are less
likely to refer to an “old” document.</t>
  <t>Regarding the “old” and “new” URIs as equally valid references for an “overlap” period.</t>
  <t>After that period, handling requests for the “old” URIs appropriately; e.g., with a 404 Not
Found, or by redirecting the client to the new URI.</t>
</list></t>

</section>
<section anchor="evolving-and-mixing-apis-with-home-documents" title="Evolving and Mixing APIs with Home Documents">

<t>Using home documents affords the opportunity to change the “shape” of the API over time, without
breaking old clients.</t>

<t>This includes introducing new functions alongside the old ones – by adding new link relation types
with corresponding resource objects – as well as adding new template variables, media types, and
so on.</t>

<t>It’s important to realise that a home document can serve more than one “API” at a time; by listing
all relevant relation types, it can effectively “mix” different APIs, allowing clients to work with
different resources as they see fit.</t>

</section>
</section>
<section anchor="considerations-for-consuming-home-documents" title="Considerations for Consuming Home Documents">

<t>Clients might use home documents in a variety of ways.</t>

<t>In the most common case – actually consuming the API – the client will scan the Resources Object
for the link relation(s) that it is interested in, and then to interact with the resource(s)
referred to. Resource Hints can be used to optimize communication with the client, as well as to
inform as to the permissible actions (e.g., whether PUT is likely to be supported).</t>

<t>Note that the home document is a “living” document; it does not represent a “contract”, but rather
is expected to be inspected before each interaction. In particular, links from the home document
MUST NOT be assumed to be valid beyond the freshness lifetime of the home document, as per HTTP’s
caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the home document (as per <xref target="RFC7234"/>), to avoid fetching it
before every interaction (which would otherwise be required).</t>

<t>Likewise, a client encountering a 404 Not Found on a link is encouraged obtain a fresh copy of the
home document, to assure that it is up-to-date.</t>

</section>
<section anchor="frequently-asked-questions" title="Frequently Asked Questions">

<section anchor="why-doesnt-the-format-allow-references-or-inheritance" title="Why doesn’t the format allow references or inheritance?">

<t>Adding inheritance or references would allow more modularity in the format and make it more
compact, at the cost of considerable complexity and the associated potential for errors (both in
the specification and by its users).</t>

<t>Since good tools and compression are effective ways to achieve the same ends, this specification
doesn’t attempt them.</t>

</section>
<section anchor="what-about-faults-ie-errors" title="What about “Faults” (i.e., errors)?">

<t>In HTTP, errors are conveyed by HTTP status codes. While this specification could (and even may)
allow enumeration of possible error conditions, there’s a concern that this will encourage
applications to define many such “faults”, leading to tight coupling between the application and
its clients.</t>

</section>
<section anchor="how-do-i-find-the-schema-for-a-format" title="How Do I find the schema for a format?">

<t>That isn’t addressed by home documents. Ultimately, it’s up to the media type accepted and
generated by resources to define and constrain (or not) their syntax.</t>

</section>
<section anchor="how-do-i-express-complex-query-arguments" title="How do I express complex query arguments?">

<t>Complex queries – i.e., those that exceed the expressive power of Link Templates or would require
ambiguous properties of a “resources” object – aren’t intended to be defined by a home document.
The appropriate way to do this is with a “form” language, much as HTML defines.</t>

<t>Note that it is possible to support multiple query syntaxes on the same base URL, using more than
one link relation type; see the example at the start of the document.</t>

</section>
</section>
<section anchor="open-issues" title="Open Issues">

<t>The following is a list of placeholders for open issues.</t>

<t><list style="symbols">
  <t>Resource Hints
  <list style="symbols">
      <t>rate limiting (per-resource?)</t>
      <t>indicate a POST to 201 Created pattern</t>
      <t>indicate an “action” POST</t>
      <t>outbound links</t>
      <t>forms?</t>
    </list></t>
  <t>Representation Hints
  <list style="symbols">
      <t>format profiles</t>
      <t>deprecation</t>
    </list></t>
  <t>Defining new resource object properties - how new ones are minted, registry, etc.</t>
  <t>Discovery (e.g., conneg, .well-known, etc.)</t>
  <t>LIMITED include function?</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAIs8NVgAA8VcWXPcRpJ+x6+oaD+I9HST1GXL1M5qdNmiR4dHotax4VAo
qoHqbgzRQA8OUm2F5rdvfplZhQK6KdmenV0/yE2gzqw8v8zCbDZL2rwt3Kl5
Vq2deVKl3dqVbWMWVW2enZ//ZB7+dNYkdj6v3eVpklVpadfUOqvtop2VVdvm
5XJl17O/N1U5W9EYs5O7SWZbanPr5OY3SUo/l1W9PTV5uaiSJN/Up6atu6a9
dXLy3cmtxNbOnpofXOlqWyRXVX2xrKtuc5pcuC39lZ2as7J1dena2RNMmiRN
a8vsvS2qkibZuibZ5Kfml7ZKp4b+ycuMNjA1TVW3tVs09Gu71h9tnaf0Kq3W
G6s/eLdTWlyRl+5dktiuXVX1aWJmiaH/8rI5NS+OzMuwU34sRHhh64vxm6pe
2jL/1bZ5VZ7yE7e2eXFq1kSsv+CfI9oKv+hqWveqbTfN6fHx1dXVkX97nCRl
Va9pjEuHMV5///jWzZvf6c/b3937Rn/evXUr/Pzu3j39+c3db0/057c37/pu
3966feeU6E+nMBz67rf3fJtv7t2+1ze/1f+83f+8G37eoVmS2Wxm7JwoSwRN
kvNV3phMmchs6mpTNa4x1kzAGuHNxMgimMtKYpx5XV01TjkuLXIcypEMTjRx
71/in7Z6/9rZzNUNJnImb5qOBi/yRgZqeXLwiEltaeaOnnZlZmie//BkXubt
qpsf0cEfg9rHZ7Mnx4Wdu6I5Dhz8n0cy/rqigWuXYisH1aJ15dR05aab04wr
lx3qXDRpPAMfok6TVzxBGPkYQ7+WEdOVLZegTe14C+7LCwW75m1zvFzNNpb6
Dpf8PZEgnG5V0qlUHa1uvSkcaM4PIQTOfX6Wq/wiH46MY1jnWVa4JPkK4lhX
WZdivCQ5YwLMHQ1BUkALSEmeG/pZbFm8aCFtZbrGydl+/ChcdPLpE5+Z3WyK
PJW1mapdORwjHR7xU5bjKemEn93cMIPQqEfmTZeuzCSopgkTkMbPME9OqmJZ
k8oB76WuAfPRCrK82Vh+3GyJ0msiw9peuGRArksSUzsvHMZZ23RF+oBOJ62r
pqE1uaCGpsaCqRpDQ7amWvDLIZnpaTJZ59R3Rlx9mdNKjiZJ8mhLCwWVsPop
+hFZBhQg2hEv0ENTdus5EYOGn5NqXORQUou6Wps17YoOn/6wTHFabcqrXU4T
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

-->

</rfc>

