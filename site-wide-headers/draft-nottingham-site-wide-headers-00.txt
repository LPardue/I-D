



Network Working Group                                      M. Nottingham
Internet-Draft                                            August 2, 2016
Intended status: Informational
Expires: February 3, 2017


                         Site-Wide HTTP Headers
                 draft-nottingham-site-wide-headers-00

Abstract

   This document specifies a mechanism for Web sites to send HTTP header
   fields that apply to large numbers of resources on an origin via a
   different, more efficient mechanism, rather than including them in
   every response.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on February 3, 2017.

Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.




Nottingham              Expires February 3, 2017                [Page 1]

Internet-Draft           Site-Wide HTTP Headers              August 2016


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  Example . . . . . . . . . . . . . . . . . . . . . . . . .   3
     1.2.  Notational Conventions  . . . . . . . . . . . . . . . . .   4
   2.  Server Operation  . . . . . . . . . . . . . . . . . . . . . .   4
     2.1.  The "HS" HTTP Response Header Field . . . . . . . . . . .   5
   3.  Client Operation  . . . . . . . . . . . . . . . . . . . . . .   5
     3.1.  The "SM" HTTP Request Header Field  . . . . . . . . . . .   6
   4.  The "site-metadata" well-known URI  . . . . . . . . . . . . .   6
     4.1.  The "text/site-headers" Media Type  . . . . . . . . . . .   6
   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   7
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .   7
     6.1.  Combining Headers . . . . . . . . . . . . . . . . . . . .   7
   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   7
     7.1.  Normative References  . . . . . . . . . . . . . . . . . .   7
     7.2.  Informative References  . . . . . . . . . . . . . . . . .   8
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   9

1.  Introduction

   A variety of metadata about Web sites is being conveyed in new HTTP
   response headers.  In particular, it is becoming more common for
   metadata that applies to an entire Web site to be conveyed in a
   header field that is included on every response for that site.

   For example, "Strict-Transport-Security" [RFC6797] and "Public-Key-
   Pins" [RFC7469] both define headers that are explicitly scoped to an
   entire origin [RFC6454], and number of similar headers are under
   consideration.

   Likewise, some HTTP header fields only sensibly have a single value
   per origin; for example, "Server".

   Furthermore, some headers are resource-specific, but in some
   deployments, are uniform across an origin.  For example, some sites
   will have a "CSP" [W3C.CR-CSP2-20150721] header that doesn't vary
   across the site, or only varies slightly from resource to resource.

   This is inefficient.  Besides the obvious bandwidth waste due to
   redundancy in HTTP/1, it also impacts HTTP/2's HPACK [RFC7541] header
   compression; since the amount of space of available for state is
   limited (by default, 4K), verbose, repeating headers can greatly
   reduce the effectiveness of HPACK.

   However, when the metadata affects processing of the response, and
   the application is latency-sensitive (as uses of HTTP so often are),




Nottingham              Expires February 3, 2017                [Page 2]

Internet-Draft           Site-Wide HTTP Headers              August 2016


   it's not practical to separate the metadata from the response; it
   needs to be sent on every response so that it is available.

   One way to mitigate this problem is to remove these common header
   fields from responses, and keep them in a separate resource.  When
   clients have fetched that resource and guarantee that they will apply
   its contents to all responses for that domain, they can indicate this
   to the server with a small request header; when servers see it, they
   can safely omit those headers in responses.

   This document defines how to do this by using a well-known URI
   (specified in Section 4) to store these headers in a format specified
   in Section 4.1.

1.1.  Example

   If a request to the well-known URI (see Section 4) returns:

   HTTP/1.1 200 OK
   Content-Type: text/site-headers
   Cache-Control: max-age=3600
   ETag: "abc123"
   Content-Length: 1234

   # a
   Strict-Transport-Security: max-age=15768000 ; includeSubDomains
   Server: Apache/2.4.7 (Ubuntu)
   Public-Key-Pins: max-age=604800;
     pin-sha256="ZitlqPmA9wodcxkwOW/c7ehlNFk8qJ9FsocodG6GzdjNM=";
     pin-sha256="XRXP987nz4rd1/gS2fJSNVfyrZbqa00T7PeRXUPd15w=";
     report-uri="/lib/key-pin.cgi"
   Cache-Control: max-age=3600
   Vary: Accept-Encoding
   # b
   Server: Apache/2.7.4 (Ubuntu)
   Cache-Control: max-age=0

   and a client that has loaded that resource makes the request:

   GET /images/foo.jpg HTTP/1.1
   Host: www.example.com
   SM: "abc123"

   this indicates that the client has processed the site-metatadata
   resource, and therefore that the server can omit the nominated
   response header fields on the wire, instead referring to them with
   the "HS" response header field:




Nottingham              Expires February 3, 2017                [Page 3]

Internet-Draft           Site-Wide HTTP Headers              August 2016


   HTTP/1.1 200 OK
   Content-Type: image/jpeg
   Vary: SM
   HS: "a"
   Transfer-Encoding: chunked

   Upon receipt of that response, the client will consider it equivalent
   to:

   HTTP/1.1 200 OK
   Content-Type: image/jpeg
   Vary: SM
   Connection: close
   Strict-Transport-Security: max-age=15768000 ; includeSubDomains
   Server: Apache/2.4.7 (Ubuntu)
   Public-Key-Pins: max-age=604800;
     pin-sha256="ZitlqPmA9wodcxkwOW/c7ehlNFk8qJ9FsocodG6GzdjNM=";
     pin-sha256="XRXP987nz4rd1/gS2fJSNVfyrZbqa00T7PeRXUPd15w=";
     report-uri="/lib/key-pin.cgi"
   Cache-Control: max-age=3600
   Vary: Accept-Encoding

   If a request omits the "SM" header field, or its field-value does not
   match the current ETag of the well-known resource, all of the header
   fields above will be sent by the server in the response.

   Note that in these examples, the "Vary" header field has two values.
   Because the field values in the well-known resource are appended to
   the header set occurring on the wire, clients will combine them as
   per the rules in [RFC7230], Section 3.2.2.

1.2.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

2.  Server Operation

   When a server wishes to use site-wide HTTP headers, it places a file
   in the format specified in Section 4.1 at the well-known URI
   specified in Section 4.

   Then, when requests have a "SM" request header field (as per
   Section 3.1) that matches the current ETag of the well-known
   resource, the set of response header fields in that nominated by the
   "HS" response header field (see Section 2.1) for that resource are
   omitted from the corresponding responses.



Nottingham              Expires February 3, 2017                [Page 4]

Internet-Draft           Site-Wide HTTP Headers              August 2016


   Servers SHOULD include "SM" in the field-value of the "Vary" response
   header field for all cacheable (as per [RFC7234]) responses of
   resources that behave in this manner, whether or not headers have
   been actually appended.  This assures correct cache operation, and
   also advertises support for this specification.

   Servers MAY use HTTP/2 Server Push ([RFC7540], Section 8.2) to
   proactively send the well-known resource to clients (e.g., if they
   emit "SM: *", indicating that they do not have a fresh copy of the
   well-known resource).

2.1.  The "HS" HTTP Response Header Field

   The "HS" HTTP response header field indicates the header set in the
   well-known location file (see Section 4.1) that should be applied to
   the response it occurs in.

   HS = DQUOTE 1*ALPHA DQUOTE

3.  Client Operation

   Clients that support this specification SHOULD always emit a "SM"
   header field in requests, carrying either the "ETag" of the well-
   known resource currently held for the origin, or "*" to indicate that
   they support this specification, but do not have a fresh (as per
   [RFC7234]) copy of it.

   Clients might discover that an origin supports this specification
   when it returns a response containing the "HS" response header field,
   or they might learn of it when the well-known location's current
   contents are sent via a HTTP/2 Server Push.

   In either case, clients SHOULD send a "SM" request header field on
   all requests to such an origin.

   Upon receiving a response to such a request containing the "HS"
   response header field, clients MUST locate the header-set referred to
   by its field-value in the stored well-known response, remove any
   surrounding white space, and append it to the response headers,
   stripping the "HS" response header field.

   If the corresponding header-set cannot be found in the well-known
   location, the response MUST be considered invalid and MUST NOT be
   used; the client MAY retry the request without the "SM" request
   header field if its method was safe, or may take alternative recovery
   strategies.





Nottingham              Expires February 3, 2017                [Page 5]

Internet-Draft           Site-Wide HTTP Headers              August 2016


3.1.  The "SM" HTTP Request Header Field

   The "SM" HTTP request header field indicates that the client has a
   fresh (as per [RFC7234]) copy of the "site-metadata" URI Section 4
   for the request's origin ([RFC6454]).

   SM = "*" / entity-tag

   Its value is the "entity-tag" [RFC7232] of the freshest valid well-
   known location response held by the client.  If none is held, it
   should be "*" (without quotes).

   For example:

   SM: "abc123"
   SM: *

4.  The "site-metadata" well-known URI

   The well-known URI [RFC5785] "site-metadata" is a resource that, when
   fetched, returns a file in the "text/site-headers" Section 4.1
   format.

   Its media type SHOULD be generated as "text/site-headers", although
   clients SHOULD NOT reject responses with other types (particularly,
   "application/octet-stream" and "text/plain").

   Its representation MUST contain an "ETag" response header [RFC7232].

   Clients SHOULD consider it to be valid for its freshness lifetime (as
   per [RFC7234]).  If it does not have an explicit freshness lifetime,
   they SHOULD consider it to have a heuristic freshness lifetime of 60
   seconds.

4.1.  The "text/site-headers" Media Type

   The "text/site-headers" media type is used to indicate that a file
   contains one or more sets of HTTP header fields, as defined in
   [RFC7230], Section 3.

   site-headers = 1*( header-header header-set )
   header-header = "#" 1*RWS set-name OWS CRLF
   set-name = 1*ALPHA
   header-set = OWS *( header-field CRLF ) OWS

   Each set of HTTP header fields is started by a header-header, which
   is indicated by an octothorp ("#") followed by the name of the header
   set.  The following lines, up until the next line beginning with an



Nottingham              Expires February 3, 2017                [Page 6]

Internet-Draft           Site-Wide HTTP Headers              August 2016


   octothorp or the end of the file are considered to be the header-
   set's contents.

   As in HTTP itself, implementations need to be forgiving about line
   endings; specifically, bare CR MUST be considered to be a line
   ending.

   For example:

   # a
   Strict-Transport-Security: max-age=15768000 ; includeSubDomains
   Server: Apache/2.4.7 (Ubuntu)
   Public-Key-Pins: max-age=604800;
     pin-sha256="ZitlqPmA9wodcxkwOW/c7ehlNFk8qJ9FsocodG6GzdjNM=";
     pin-sha256="XRXP987nz4rd1/gS2fJSNVfyrZbqa00T7PeRXUPd15w=";
     report-uri="/lib/key-pin.cgi"
   Cache-Control: max-age=3600
   Vary: Accept-Encoding
   # b
   Server: Apache/2.7.4 (Ubuntu)
   Cache-Control: max-age=0

   This file specifies two sets of HTTP headers, "a" and "b".  Note that
   the "Public-Key-Pins" header field in "a" is line-folded; as in HTTP,
   this form of header is deprecated in this format, and SHOULD NOT be
   used (except in documentation, as we see here).

5.  IANA Considerations

   TBD

6.  Security Considerations

6.1.  Combining Headers

7.  References

7.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119, DOI 10.17487/
              RFC2119, March 1997,
              <http://www.rfc-editor.org/info/rfc2119>.

   [RFC5785]  Nottingham, M. and E. Hammer-Lahav, "Defining Well-Known
              Uniform Resource Identifiers (URIs)", RFC 5785, DOI
              10.17487/RFC5785, April 2010,
              <http://www.rfc-editor.org/info/rfc5785>.



Nottingham              Expires February 3, 2017                [Page 7]

Internet-Draft           Site-Wide HTTP Headers              August 2016


   [RFC6454]  Barth, A., "The Web Origin Concept", RFC 6454, DOI
              10.17487/RFC6454, December 2011,
              <http://www.rfc-editor.org/info/rfc6454>.

   [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., "Hypertext Transfer
              Protocol (HTTP/1.1): Message Syntax and Routing", RFC
              7230, DOI 10.17487/RFC7230, June 2014,
              <http://www.rfc-editor.org/info/rfc7230>.

   [RFC7232]  Fielding, R., Ed. and J. Reschke, Ed., "Hypertext Transfer
              Protocol (HTTP/1.1): Conditional Requests", RFC 7232, DOI
              10.17487/RFC7232, June 2014,
              <http://www.rfc-editor.org/info/rfc7232>.

   [RFC7234]  Fielding, R., Ed., Nottingham, M., Ed., and J. Reschke,
              Ed., "Hypertext Transfer Protocol (HTTP/1.1): Caching",
              RFC 7234, DOI 10.17487/RFC7234, June 2014,
              <http://www.rfc-editor.org/info/rfc7234>.

7.2.  Informative References

   [RFC6797]  Hodges, J., Jackson, C., and A. Barth, "HTTP Strict
              Transport Security (HSTS)", RFC 6797, DOI 10.17487/
              RFC6797, November 2012,
              <http://www.rfc-editor.org/info/rfc6797>.

   [RFC7469]  Evans, C., Palmer, C., and R. Sleevi, "Public Key Pinning
              Extension for HTTP", RFC 7469, DOI 10.17487/RFC7469, April
              2015, <http://www.rfc-editor.org/info/rfc7469>.

   [RFC7540]  Belshe, M., Peon, R., and M. Thomson, Ed., "Hypertext
              Transfer Protocol Version 2 (HTTP/2)", RFC 7540, DOI
              10.17487/RFC7540, May 2015,
              <http://www.rfc-editor.org/info/rfc7540>.

   [RFC7541]  Peon, R. and H. Ruellan, "HPACK: Header Compression for
              HTTP/2", RFC 7541, DOI 10.17487/RFC7541, May 2015,
              <http://www.rfc-editor.org/info/rfc7541>.

   [W3C.CR-CSP2-20150721]
              West, M., Barth, A., and D. Veditz, "Content Security
              Policy Level 2", World Wide Web Consortium CR CR-
              CSP2-20150721, July 2015,
              <http://www.w3.org/TR/2015/CR-CSP2-20150721>.







Nottingham              Expires February 3, 2017                [Page 8]

Internet-Draft           Site-Wide HTTP Headers              August 2016


Author's Address

   Mark Nottingham

   Email: mnot@mnot.net
   URI:   http://www.mnot.net/













































Nottingham              Expires February 3, 2017                [Page 9]
